{
  "project_id": "-1",
  "name": "Local Project",
  "intro": "",
  "global": {
    "envs": [
      {
        "env_id": "1",
        "name": "Default Environment",
        "is_private": -1,
        "sort": 1,
        "server_list": [
          {
            "server_id": "1",
            "name": "Default Services",
            "sort": 1,
            "uri": "",
            "is_default": 1
          }
        ],
        "env_var_list": {}
      }
    ],
    "servers": [
      {
        "name": "Default Services",
        "server_id": "1",
        "uri": "",
        "sort": 1,
        "is_default": 1
      }
    ],
    "global_vars": {},
    "global_param": {}
  },
  "apis": [
    {
      "project_id": "",
      "target_id": "2fef492936d006",
      "parent_id": "0",
      "target_type": "folder",
      "name": "Hacktok",
      "sort": 8,
      "version": 0,
      "status": 1,
      "is_changed": 1,
      "is_create": 1,
      "description": "",
      "server_id": "0",
      "request": {
        "header": {
          "parameter": []
        },
        "query": {
          "parameter": []
        },
        "body": {
          "parameter": []
        },
        "cookie": {
          "parameter": []
        },
        "auth": {
          "type": "inherit",
          "kv": {
            "key": "",
            "value": "",
            "in": "header"
          },
          "bearer": {
            "key": ""
          },
          "basic": {
            "username": "",
            "password": ""
          },
          "digest": {
            "username": "",
            "password": "",
            "realm": "",
            "nonce": "",
            "algorithm": "MD5",
            "qop": "",
            "nc": "",
            "cnonce": "",
            "opaque": "",
            "disableRetryRequest": false
          },
          "oauth1": {
            "consumerKey": "",
            "consumerSecret": "",
            "signatureMethod": "HMAC-SHA1",
            "addEmptyParamsToSign": true,
            "includeBodyHash": true,
            "addParamsToHeader": false,
            "realm": "",
            "version": "1.0",
            "nonce": "",
            "timestamp": "",
            "verifier": "",
            "callback": "",
            "tokenSecret": "",
            "token": "",
            "disableHeaderEncoding": false
          },
          "oauth2": {
            "addTokenTo": "header",
            "headerPrefix": "Bearer",
            "access_token": "",
            "grant_type": "password_credentials",
            "redirect_uri": "",
            "authUrl": "",
            "accessTokenUrl": "",
            "clientId": "",
            "clientSecret": "",
            "username": "",
            "password": "",
            "challengeAlgorithm": "S256",
            "code_verifier": "Bearer",
            "scope": "",
            "state": "",
            "client_authentication": "header",
            "refreshTokenUrl": "",
            "authRequestParams": [],
            "tokenRequestParams": [],
            "refreshRequestParams": []
          },
          "hawk": {
            "authId": "",
            "authKey": "",
            "algorithm": "",
            "user": "",
            "nonce": "",
            "extraData": "",
            "app": "",
            "delegation": "",
            "timestamp": "",
            "includePayloadHash": false
          },
          "awsv4": {
            "accessKey": "",
            "secretKey": "",
            "region": "",
            "service": "",
            "sessionToken": "",
            "addAuthDataToQuery": false
          },
          "ntlm": {
            "username": "",
            "password": "",
            "domain": "",
            "workstation": "",
            "disableRetryRequest": false
          },
          "edgegrid": {
            "accessToken": "",
            "clientToken": "",
            "clientSecret": "",
            "nonce": "",
            "timestamp": "",
            "baseURi": "",
            "headersToSign": ""
          },
          "noauth": {},
          "jwt": {
            "addTokenTo": "header",
            "algorithm": "HS256",
            "secret": "",
            "isSecretBase64Encoded": false,
            "payload": "",
            "headerPrefix": "Bearer",
            "queryParamKey": "token",
            "header": ""
          },
          "asap": {
            "alg": "HS256",
            "iss": "",
            "aud": "",
            "kid": "",
            "privateKey": "",
            "sub": "",
            "claims": "",
            "exp": ""
          }
        },
        "pre_tasks": [],
        "post_tasks": []
      },
      "is_force": -1,
      "is_deleted": -1,
      "is_conflicted": -1,
      "mark_id": "",
      "vscode_version": "1.7.12"
    },
    {
      "project_id": "",
      "target_id": "2fef55a0b6d007",
      "parent_id": "2fef492936d006",
      "target_type": "api",
      "name": "Knowledge base webhook",
      "sort": 5,
      "version": 0,
      "mark_id": "",
      "status": 1,
      "is_changed": -1,
      "is_create": -1,
      "method": "POST",
      "url": "http://localhost:5000/knowledge-base?knowledge_base=123",
      "request": {
        "auth": {
          "type": "inherit",
          "kv": {
            "key": "",
            "value": "",
            "in": "header"
          },
          "bearer": {
            "key": ""
          },
          "basic": {
            "username": "",
            "password": ""
          },
          "digest": {
            "username": "",
            "password": "",
            "realm": "",
            "nonce": "",
            "algorithm": "MD5",
            "qop": "",
            "nc": "",
            "cnonce": "",
            "opaque": "",
            "disableRetryRequest": false
          },
          "oauth1": {
            "consumerKey": "",
            "consumerSecret": "",
            "signatureMethod": "HMAC-SHA1",
            "addEmptyParamsToSign": true,
            "includeBodyHash": true,
            "addParamsToHeader": false,
            "realm": "",
            "version": "1.0",
            "nonce": "",
            "timestamp": "",
            "verifier": "",
            "callback": "",
            "tokenSecret": "",
            "token": "",
            "disableHeaderEncoding": false
          },
          "oauth2": {
            "addTokenTo": "header",
            "headerPrefix": "Bearer",
            "access_token": "",
            "grant_type": "password_credentials",
            "redirect_uri": "",
            "authUrl": "",
            "accessTokenUrl": "",
            "clientId": "",
            "clientSecret": "",
            "username": "",
            "password": "",
            "challengeAlgorithm": "S256",
            "code_verifier": "Bearer",
            "scope": "",
            "state": "",
            "client_authentication": "header",
            "refreshTokenUrl": "",
            "authRequestParams": [],
            "tokenRequestParams": [],
            "refreshRequestParams": []
          },
          "hawk": {
            "authId": "",
            "authKey": "",
            "algorithm": "",
            "user": "",
            "nonce": "",
            "extraData": "",
            "app": "",
            "delegation": "",
            "timestamp": "",
            "includePayloadHash": false
          },
          "awsv4": {
            "accessKey": "",
            "secretKey": "",
            "region": "",
            "service": "",
            "sessionToken": "",
            "addAuthDataToQuery": false
          },
          "ntlm": {
            "username": "",
            "password": "",
            "domain": "",
            "workstation": "",
            "disableRetryRequest": false
          },
          "edgegrid": {
            "accessToken": "",
            "clientToken": "",
            "clientSecret": "",
            "nonce": "",
            "timestamp": "",
            "baseURi": "",
            "headersToSign": ""
          },
          "noauth": {},
          "jwt": {
            "addTokenTo": "header",
            "algorithm": "HS256",
            "secret": "",
            "isSecretBase64Encoded": false,
            "payload": "",
            "headerPrefix": "Bearer",
            "queryParamKey": "token",
            "header": ""
          },
          "asap": {
            "alg": "HS256",
            "iss": "",
            "aud": "",
            "kid": "",
            "privateKey": "",
            "sub": "",
            "claims": "",
            "exp": ""
          }
        },
        "body": {
          "mode": "none",
          "parameter": [],
          "raw": "",
          "raw_parameter": [],
          "raw_schema": {
            "type": "object"
          },
          "binary": null
        },
        "pre_tasks": [],
        "post_tasks": [],
        "header": {
          "parameter": []
        },
        "query": {
          "parameter": [
            {
              "param_id": "2fef572836d005",
              "field_type": "String",
              "is_checked": 1,
              "key": "knowledge_base",
              "not_null": 1,
              "value": "123",
              "description": ""
            }
          ],
          "query_add_equal": 1
        },
        "cookie": {
          "parameter": []
        },
        "restful": {
          "parameter": []
        }
      },
      "response": {
        "is_check_result": 1,
        "example": [
          {
            "example_id": "1",
            "raw": "",
            "raw_parameter": [],
            "expect": {
              "name": "Success",
              "is_default": 1,
              "code": "200",
              "content_type": "json",
              "verify_type": "schema",
              "mock": "",
              "schema": {
                "type": "object",
                "properties": {}
              }
            }
          },
          {
            "example_id": "2",
            "raw": "",
            "raw_parameter": [],
            "expect": {
              "name": "Failure",
              "is_default": -1,
              "code": "404",
              "content_type": "json",
              "verify_type": "schema",
              "mock": "",
              "schema": {
                "type": "object",
                "properties": {}
              }
            }
          }
        ]
      },
      "description": "",
      "tags": [],
      "ai_expect_enable": -1,
      "is_check_result": 1,
      "is_socket": 1,
      "is_locked": -1,
      "is_force": -1,
      "attribute_info": {},
      "protocol": "http/1.1",
      "ai_expect": {
        "list": [],
        "none_math_expect_id": ""
      },
      "is_deleted": -1,
      "is_conflicted": -1,
      "vscode_version": "1.7.12"
    },
    {
      "project_id": "",
      "target_id": "3010064076d009",
      "parent_id": "2fef492936d006",
      "target_type": "api",
      "name": "Get features",
      "sort": 1,
      "version": 0,
      "mark_id": "",
      "status": 1,
      "is_changed": 1,
      "is_create": -1,
      "method": "GET",
      "url": "http://localhost:5000/features",
      "request": {
        "auth": {
          "type": "inherit",
          "kv": {
            "key": "",
            "value": "",
            "in": "header"
          },
          "bearer": {
            "key": ""
          },
          "basic": {
            "username": "",
            "password": ""
          },
          "digest": {
            "username": "",
            "password": "",
            "realm": "",
            "nonce": "",
            "algorithm": "MD5",
            "qop": "",
            "nc": "",
            "cnonce": "",
            "opaque": "",
            "disableRetryRequest": false
          },
          "oauth1": {
            "consumerKey": "",
            "consumerSecret": "",
            "signatureMethod": "HMAC-SHA1",
            "addEmptyParamsToSign": true,
            "includeBodyHash": true,
            "addParamsToHeader": false,
            "realm": "",
            "version": "1.0",
            "nonce": "",
            "timestamp": "",
            "verifier": "",
            "callback": "",
            "tokenSecret": "",
            "token": "",
            "disableHeaderEncoding": false
          },
          "oauth2": {
            "addTokenTo": "header",
            "headerPrefix": "Bearer",
            "access_token": "",
            "grant_type": "password_credentials",
            "redirect_uri": "",
            "authUrl": "",
            "accessTokenUrl": "",
            "clientId": "",
            "clientSecret": "",
            "username": "",
            "password": "",
            "challengeAlgorithm": "S256",
            "code_verifier": "Bearer",
            "scope": "",
            "state": "",
            "client_authentication": "header",
            "refreshTokenUrl": "",
            "authRequestParams": [],
            "tokenRequestParams": [],
            "refreshRequestParams": []
          },
          "hawk": {
            "authId": "",
            "authKey": "",
            "algorithm": "",
            "user": "",
            "nonce": "",
            "extraData": "",
            "app": "",
            "delegation": "",
            "timestamp": "",
            "includePayloadHash": false
          },
          "awsv4": {
            "accessKey": "",
            "secretKey": "",
            "region": "",
            "service": "",
            "sessionToken": "",
            "addAuthDataToQuery": false
          },
          "ntlm": {
            "username": "",
            "password": "",
            "domain": "",
            "workstation": "",
            "disableRetryRequest": false
          },
          "edgegrid": {
            "accessToken": "",
            "clientToken": "",
            "clientSecret": "",
            "nonce": "",
            "timestamp": "",
            "baseURi": "",
            "headersToSign": ""
          },
          "noauth": {},
          "jwt": {
            "addTokenTo": "header",
            "algorithm": "HS256",
            "secret": "",
            "isSecretBase64Encoded": false,
            "payload": "",
            "headerPrefix": "Bearer",
            "queryParamKey": "token",
            "header": ""
          },
          "asap": {
            "alg": "HS256",
            "iss": "",
            "aud": "",
            "kid": "",
            "privateKey": "",
            "sub": "",
            "claims": "",
            "exp": ""
          }
        },
        "body": {
          "mode": "none",
          "parameter": [],
          "raw": "",
          "raw_parameter": [],
          "raw_schema": {
            "type": "object"
          },
          "binary": null
        },
        "pre_tasks": [],
        "post_tasks": [],
        "header": {
          "parameter": []
        },
        "query": {
          "parameter": [],
          "query_add_equal": 1
        },
        "cookie": {
          "parameter": []
        },
        "restful": {
          "parameter": []
        }
      },
      "response": {
        "is_check_result": 1,
        "example": [
          {
            "example_id": "1",
            "raw": "",
            "raw_parameter": [],
            "expect": {
              "name": "Success",
              "is_default": 1,
              "code": "200",
              "content_type": "json",
              "verify_type": "schema",
              "mock": "",
              "schema": {
                "type": "object",
                "properties": {}
              }
            }
          },
          {
            "example_id": "2",
            "raw": "",
            "raw_parameter": [],
            "expect": {
              "name": "Failure",
              "is_default": -1,
              "code": "404",
              "content_type": "json",
              "verify_type": "schema",
              "mock": "",
              "schema": {
                "type": "object",
                "properties": {}
              }
            }
          }
        ]
      },
      "description": "",
      "tags": [],
      "ai_expect_enable": -1,
      "is_check_result": 1,
      "is_socket": 1,
      "is_locked": -1,
      "is_force": -1,
      "attribute_info": {},
      "protocol": "http/1.1",
      "ai_expect": {
        "list": [],
        "none_math_expect_id": ""
      },
      "is_deleted": -1,
      "is_conflicted": -1,
      "vscode_version": "1.7.12"
    },
    {
      "project_id": "",
      "target_id": "30154a5cb90005",
      "parent_id": "2fef492936d006",
      "target_type": "api",
      "name": "Add feature",
      "sort": 2,
      "version": 0,
      "mark_id": "",
      "status": 1,
      "is_changed": -1,
      "is_create": -1,
      "method": "POST",
      "url": "http://localhost:5000/features",
      "request": {
        "auth": {
          "type": "inherit",
          "kv": {
            "key": "",
            "value": "",
            "in": "header"
          },
          "bearer": {
            "key": ""
          },
          "basic": {
            "username": "",
            "password": ""
          },
          "digest": {
            "username": "",
            "password": "",
            "realm": "",
            "nonce": "",
            "algorithm": "MD5",
            "qop": "",
            "nc": "",
            "cnonce": "",
            "opaque": "",
            "disableRetryRequest": false
          },
          "oauth1": {
            "consumerKey": "",
            "consumerSecret": "",
            "signatureMethod": "HMAC-SHA1",
            "addEmptyParamsToSign": true,
            "includeBodyHash": true,
            "addParamsToHeader": false,
            "realm": "",
            "version": "1.0",
            "nonce": "",
            "timestamp": "",
            "verifier": "",
            "callback": "",
            "tokenSecret": "",
            "token": "",
            "disableHeaderEncoding": false
          },
          "oauth2": {
            "addTokenTo": "header",
            "headerPrefix": "Bearer",
            "access_token": "",
            "grant_type": "password_credentials",
            "redirect_uri": "",
            "authUrl": "",
            "accessTokenUrl": "",
            "clientId": "",
            "clientSecret": "",
            "username": "",
            "password": "",
            "challengeAlgorithm": "S256",
            "code_verifier": "Bearer",
            "scope": "",
            "state": "",
            "client_authentication": "header",
            "refreshTokenUrl": "",
            "authRequestParams": [],
            "tokenRequestParams": [],
            "refreshRequestParams": []
          },
          "hawk": {
            "authId": "",
            "authKey": "",
            "algorithm": "",
            "user": "",
            "nonce": "",
            "extraData": "",
            "app": "",
            "delegation": "",
            "timestamp": "",
            "includePayloadHash": false
          },
          "awsv4": {
            "accessKey": "",
            "secretKey": "",
            "region": "",
            "service": "",
            "sessionToken": "",
            "addAuthDataToQuery": false
          },
          "ntlm": {
            "username": "",
            "password": "",
            "domain": "",
            "workstation": "",
            "disableRetryRequest": false
          },
          "edgegrid": {
            "accessToken": "",
            "clientToken": "",
            "clientSecret": "",
            "nonce": "",
            "timestamp": "",
            "baseURi": "",
            "headersToSign": ""
          },
          "noauth": {},
          "jwt": {
            "addTokenTo": "header",
            "algorithm": "HS256",
            "secret": "",
            "isSecretBase64Encoded": false,
            "payload": "",
            "headerPrefix": "Bearer",
            "queryParamKey": "token",
            "header": ""
          },
          "asap": {
            "alg": "HS256",
            "iss": "",
            "aud": "",
            "kid": "",
            "privateKey": "",
            "sub": "",
            "claims": "",
            "exp": ""
          }
        },
        "body": {
          "mode": "json",
          "parameter": [],
          "raw": "{\n  \"name\": \"Unified retention control via DRT & CDS\",\n  \"description\": \"Introduce a data retention feature using DRT thresholds, ensuring automatic log deletion across all regions. CDS will continuously audit retention violations, triggering EchoTrace as necessary. Spanner logic ensures all platform modules comply uniformly.\"\n}",
          "raw_parameter": [],
          "raw_schema": {
            "type": "object"
          },
          "binary": null
        },
        "pre_tasks": [],
        "post_tasks": [],
        "header": {
          "parameter": []
        },
        "query": {
          "parameter": [],
          "query_add_equal": 1
        },
        "cookie": {
          "parameter": []
        },
        "restful": {
          "parameter": []
        }
      },
      "response": {
        "is_check_result": 1,
        "example": [
          {
            "example_id": "1",
            "raw": "",
            "raw_parameter": [],
            "expect": {
              "name": "Success",
              "is_default": 1,
              "code": "200",
              "content_type": "json",
              "verify_type": "schema",
              "mock": "",
              "schema": {
                "type": "object",
                "properties": {}
              }
            }
          },
          {
            "example_id": "2",
            "raw": "",
            "raw_parameter": [],
            "expect": {
              "name": "Failure",
              "is_default": -1,
              "code": "404",
              "content_type": "json",
              "verify_type": "schema",
              "mock": "",
              "schema": {
                "type": "object",
                "properties": {}
              }
            }
          }
        ]
      },
      "description": "",
      "tags": [],
      "ai_expect_enable": -1,
      "is_check_result": 1,
      "is_socket": 1,
      "is_locked": -1,
      "is_force": -1,
      "attribute_info": {},
      "protocol": "http/1.1",
      "ai_expect": {
        "list": [],
        "none_math_expect_id": ""
      },
      "is_deleted": -1,
      "is_conflicted": -1,
      "vscode_version": "1.7.12"
    },
    {
      "project_id": "-1",
      "target_id": "3016b609790007",
      "parent_id": "2fef492936d006",
      "target_type": "sse",
      "name": "Stream features",
      "sort": 4,
      "version": 0,
      "mark_id": "1",
      "status": 1,
      "is_changed": -1,
      "is_create": -1,
      "method": "GET",
      "url": "http://localhost:5000/features/stream",
      "request": {
        "auth": {
          "type": "inherit",
          "kv": {
            "key": "",
            "value": "",
            "in": "header"
          },
          "bearer": {
            "key": ""
          },
          "basic": {
            "username": "",
            "password": ""
          },
          "digest": {
            "username": "",
            "password": "",
            "realm": "",
            "nonce": "",
            "algorithm": "MD5",
            "qop": "",
            "nc": "",
            "cnonce": "",
            "opaque": "",
            "disableRetryRequest": false
          },
          "oauth1": {
            "consumerKey": "",
            "consumerSecret": "",
            "signatureMethod": "HMAC-SHA1",
            "addEmptyParamsToSign": true,
            "includeBodyHash": true,
            "addParamsToHeader": false,
            "realm": "",
            "version": "1.0",
            "nonce": "",
            "timestamp": "",
            "verifier": "",
            "callback": "",
            "tokenSecret": "",
            "token": "",
            "disableHeaderEncoding": false
          },
          "oauth2": {
            "addTokenTo": "header",
            "headerPrefix": "Bearer",
            "access_token": "",
            "grant_type": "password_credentials",
            "redirect_uri": "",
            "authUrl": "",
            "accessTokenUrl": "",
            "clientId": "",
            "clientSecret": "",
            "username": "",
            "password": "",
            "challengeAlgorithm": "S256",
            "code_verifier": "Bearer",
            "scope": "",
            "state": "",
            "client_authentication": "header",
            "refreshTokenUrl": "",
            "authRequestParams": [],
            "tokenRequestParams": [],
            "refreshRequestParams": []
          },
          "hawk": {
            "authId": "",
            "authKey": "",
            "algorithm": "",
            "user": "",
            "nonce": "",
            "extraData": "",
            "app": "",
            "delegation": "",
            "timestamp": "",
            "includePayloadHash": false
          },
          "awsv4": {
            "accessKey": "",
            "secretKey": "",
            "region": "",
            "service": "",
            "sessionToken": "",
            "addAuthDataToQuery": false
          },
          "ntlm": {
            "username": "",
            "password": "",
            "domain": "",
            "workstation": "",
            "disableRetryRequest": false
          },
          "edgegrid": {
            "accessToken": "",
            "clientToken": "",
            "clientSecret": "",
            "nonce": "",
            "timestamp": "",
            "baseURi": "",
            "headersToSign": ""
          },
          "noauth": {},
          "jwt": {
            "addTokenTo": "header",
            "algorithm": "HS256",
            "secret": "",
            "isSecretBase64Encoded": false,
            "payload": "",
            "headerPrefix": "Bearer",
            "queryParamKey": "token",
            "header": ""
          },
          "asap": {
            "alg": "HS256",
            "iss": "",
            "aud": "",
            "kid": "",
            "privateKey": "",
            "sub": "",
            "claims": "",
            "exp": ""
          }
        },
        "body": {
          "mode": "none",
          "parameter": [],
          "raw": "",
          "raw_parameter": [],
          "raw_schema": {
            "type": "object"
          },
          "binary": null
        },
        "pre_tasks": [],
        "post_tasks": [],
        "header": {
          "parameter": []
        },
        "query": {
          "parameter": [],
          "query_add_equal": 1
        },
        "cookie": {
          "parameter": []
        },
        "restful": {
          "parameter": []
        }
      },
      "response": {
        "is_check_result": 1,
        "example": [
          {
            "example_id": "1",
            "raw": "",
            "raw_parameter": [],
            "expect": {
              "is_default": 1,
              "code": "200",
              "content_type": "json",
              "verify_type": "schema",
              "mock": "",
              "schema": {
                "type": "object",
                "properties": {}
              }
            }
          },
          {
            "example_id": "2",
            "raw": "",
            "raw_parameter": [],
            "expect": {
              "is_default": -1,
              "code": "404",
              "content_type": "json",
              "verify_type": "schema",
              "mock": "",
              "schema": {
                "type": "object",
                "properties": {}
              }
            }
          }
        ]
      },
      "description": "",
      "tags": [],
      "is_socket": 1,
      "is_locked": -1,
      "is_force": -1,
      "attribute_info": {}
    },
    {
      "project_id": "",
      "target_id": "301be653b9000b",
      "parent_id": "2fef492936d006",
      "target_type": "api",
      "name": "Update feature",
      "sort": 3,
      "version": 0,
      "mark_id": "",
      "status": 1,
      "is_changed": -1,
      "is_create": -1,
      "method": "PUT",
      "url": "http://localhost:5000/features/68b00e0ee2097126351f3a98",
      "request": {
        "auth": {
          "type": "inherit",
          "kv": {
            "key": "",
            "value": "",
            "in": "header"
          },
          "bearer": {
            "key": ""
          },
          "basic": {
            "username": "",
            "password": ""
          },
          "digest": {
            "username": "",
            "password": "",
            "realm": "",
            "nonce": "",
            "algorithm": "MD5",
            "qop": "",
            "nc": "",
            "cnonce": "",
            "opaque": "",
            "disableRetryRequest": false
          },
          "oauth1": {
            "consumerKey": "",
            "consumerSecret": "",
            "signatureMethod": "HMAC-SHA1",
            "addEmptyParamsToSign": true,
            "includeBodyHash": true,
            "addParamsToHeader": false,
            "realm": "",
            "version": "1.0",
            "nonce": "",
            "timestamp": "",
            "verifier": "",
            "callback": "",
            "tokenSecret": "",
            "token": "",
            "disableHeaderEncoding": false
          },
          "oauth2": {
            "addTokenTo": "header",
            "headerPrefix": "Bearer",
            "access_token": "",
            "grant_type": "password_credentials",
            "redirect_uri": "",
            "authUrl": "",
            "accessTokenUrl": "",
            "clientId": "",
            "clientSecret": "",
            "username": "",
            "password": "",
            "challengeAlgorithm": "S256",
            "code_verifier": "Bearer",
            "scope": "",
            "state": "",
            "client_authentication": "header",
            "refreshTokenUrl": "",
            "authRequestParams": [],
            "tokenRequestParams": [],
            "refreshRequestParams": []
          },
          "hawk": {
            "authId": "",
            "authKey": "",
            "algorithm": "",
            "user": "",
            "nonce": "",
            "extraData": "",
            "app": "",
            "delegation": "",
            "timestamp": "",
            "includePayloadHash": false
          },
          "awsv4": {
            "accessKey": "",
            "secretKey": "",
            "region": "",
            "service": "",
            "sessionToken": "",
            "addAuthDataToQuery": false
          },
          "ntlm": {
            "username": "",
            "password": "",
            "domain": "",
            "workstation": "",
            "disableRetryRequest": false
          },
          "edgegrid": {
            "accessToken": "",
            "clientToken": "",
            "clientSecret": "",
            "nonce": "",
            "timestamp": "",
            "baseURi": "",
            "headersToSign": ""
          },
          "noauth": {},
          "jwt": {
            "addTokenTo": "header",
            "algorithm": "HS256",
            "secret": "",
            "isSecretBase64Encoded": false,
            "payload": "",
            "headerPrefix": "Bearer",
            "queryParamKey": "token",
            "header": ""
          },
          "asap": {
            "alg": "HS256",
            "iss": "",
            "aud": "",
            "kid": "",
            "privateKey": "",
            "sub": "",
            "claims": "",
            "exp": ""
          }
        },
        "body": {
          "mode": "json",
          "parameter": [],
          "raw": "{\n  \"status\": \"pending\"\n}",
          "raw_parameter": [],
          "raw_schema": {
            "type": "object"
          },
          "binary": null
        },
        "pre_tasks": [],
        "post_tasks": [],
        "header": {
          "parameter": []
        },
        "query": {
          "parameter": [],
          "query_add_equal": 1
        },
        "cookie": {
          "parameter": []
        },
        "restful": {
          "parameter": []
        }
      },
      "response": {
        "is_check_result": 1,
        "example": [
          {
            "example_id": "1",
            "raw": "",
            "raw_parameter": [],
            "expect": {
              "name": "Success",
              "is_default": 1,
              "code": "200",
              "content_type": "json",
              "verify_type": "schema",
              "mock": "",
              "schema": {
                "type": "object",
                "properties": {}
              }
            }
          },
          {
            "example_id": "2",
            "raw": "",
            "raw_parameter": [],
            "expect": {
              "name": "Failure",
              "is_default": -1,
              "code": "404",
              "content_type": "json",
              "verify_type": "schema",
              "mock": "",
              "schema": {
                "type": "object",
                "properties": {}
              }
            }
          }
        ]
      },
      "description": "",
      "tags": [],
      "ai_expect_enable": -1,
      "is_check_result": 1,
      "is_socket": 1,
      "is_locked": -1,
      "is_force": -1,
      "attribute_info": {},
      "protocol": "http/1.1",
      "ai_expect": {
        "list": [],
        "none_math_expect_id": ""
      },
      "is_deleted": -1,
      "is_conflicted": -1,
      "vscode_version": "1.7.12"
    },
    {
      "project_id": "",
      "target_id": "3030cde9f90030",
      "parent_id": "2fef492936d006",
      "target_type": "api",
      "name": "Get sources",
      "sort": 6,
      "version": 0,
      "mark_id": "",
      "status": 1,
      "is_changed": -1,
      "is_create": -1,
      "method": "GET",
      "url": "http://localhost:5000/sources",
      "request": {
        "auth": {
          "type": "inherit",
          "kv": {
            "key": "",
            "value": "",
            "in": "header"
          },
          "bearer": {
            "key": ""
          },
          "basic": {
            "username": "",
            "password": ""
          },
          "digest": {
            "username": "",
            "password": "",
            "realm": "",
            "nonce": "",
            "algorithm": "MD5",
            "qop": "",
            "nc": "",
            "cnonce": "",
            "opaque": "",
            "disableRetryRequest": false
          },
          "oauth1": {
            "consumerKey": "",
            "consumerSecret": "",
            "signatureMethod": "HMAC-SHA1",
            "addEmptyParamsToSign": true,
            "includeBodyHash": true,
            "addParamsToHeader": false,
            "realm": "",
            "version": "1.0",
            "nonce": "",
            "timestamp": "",
            "verifier": "",
            "callback": "",
            "tokenSecret": "",
            "token": "",
            "disableHeaderEncoding": false
          },
          "oauth2": {
            "addTokenTo": "header",
            "headerPrefix": "Bearer",
            "access_token": "",
            "grant_type": "password_credentials",
            "redirect_uri": "",
            "authUrl": "",
            "accessTokenUrl": "",
            "clientId": "",
            "clientSecret": "",
            "username": "",
            "password": "",
            "challengeAlgorithm": "S256",
            "code_verifier": "Bearer",
            "scope": "",
            "state": "",
            "client_authentication": "header",
            "refreshTokenUrl": "",
            "authRequestParams": [],
            "tokenRequestParams": [],
            "refreshRequestParams": []
          },
          "hawk": {
            "authId": "",
            "authKey": "",
            "algorithm": "",
            "user": "",
            "nonce": "",
            "extraData": "",
            "app": "",
            "delegation": "",
            "timestamp": "",
            "includePayloadHash": false
          },
          "awsv4": {
            "accessKey": "",
            "secretKey": "",
            "region": "",
            "service": "",
            "sessionToken": "",
            "addAuthDataToQuery": false
          },
          "ntlm": {
            "username": "",
            "password": "",
            "domain": "",
            "workstation": "",
            "disableRetryRequest": false
          },
          "edgegrid": {
            "accessToken": "",
            "clientToken": "",
            "clientSecret": "",
            "nonce": "",
            "timestamp": "",
            "baseURi": "",
            "headersToSign": ""
          },
          "noauth": {},
          "jwt": {
            "addTokenTo": "header",
            "algorithm": "HS256",
            "secret": "",
            "isSecretBase64Encoded": false,
            "payload": "",
            "headerPrefix": "Bearer",
            "queryParamKey": "token",
            "header": ""
          },
          "asap": {
            "alg": "HS256",
            "iss": "",
            "aud": "",
            "kid": "",
            "privateKey": "",
            "sub": "",
            "claims": "",
            "exp": ""
          }
        },
        "body": {
          "mode": "none",
          "parameter": [],
          "raw": "",
          "raw_parameter": [],
          "raw_schema": {
            "type": "object"
          },
          "binary": null
        },
        "pre_tasks": [],
        "post_tasks": [],
        "header": {
          "parameter": []
        },
        "query": {
          "parameter": [],
          "query_add_equal": 1
        },
        "cookie": {
          "parameter": []
        },
        "restful": {
          "parameter": []
        }
      },
      "response": {
        "is_check_result": 1,
        "example": [
          {
            "example_id": "1",
            "raw": "",
            "raw_parameter": [],
            "expect": {
              "name": "Success",
              "is_default": 1,
              "code": "200",
              "content_type": "json",
              "verify_type": "schema",
              "mock": "",
              "schema": {
                "type": "object",
                "properties": {}
              }
            }
          },
          {
            "example_id": "2",
            "raw": "",
            "raw_parameter": [],
            "expect": {
              "name": "Failure",
              "is_default": -1,
              "code": "404",
              "content_type": "json",
              "verify_type": "schema",
              "mock": "",
              "schema": {
                "type": "object",
                "properties": {}
              }
            }
          }
        ]
      },
      "description": "",
      "tags": [],
      "ai_expect_enable": -1,
      "is_check_result": 1,
      "is_socket": 1,
      "is_locked": -1,
      "is_force": -1,
      "attribute_info": {},
      "protocol": "http/1.1",
      "ai_expect": {
        "list": [],
        "none_math_expect_id": ""
      },
      "is_deleted": -1,
      "is_conflicted": -1,
      "vscode_version": "1.7.12"
    },
    {
      "project_id": "",
      "target_id": "3031902f790031",
      "parent_id": "2fef492936d006",
      "target_type": "api",
      "name": "Add source",
      "sort": 8,
      "version": 0,
      "mark_id": "",
      "status": 1,
      "is_changed": -1,
      "is_create": -1,
      "method": "POST",
      "url": "http://localhost:5000/sources",
      "request": {
        "auth": {
          "type": "inherit",
          "kv": {
            "key": "",
            "value": "",
            "in": "header"
          },
          "bearer": {
            "key": ""
          },
          "basic": {
            "username": "",
            "password": ""
          },
          "digest": {
            "username": "",
            "password": "",
            "realm": "",
            "nonce": "",
            "algorithm": "MD5",
            "qop": "",
            "nc": "",
            "cnonce": "",
            "opaque": "",
            "disableRetryRequest": false
          },
          "oauth1": {
            "consumerKey": "",
            "consumerSecret": "",
            "signatureMethod": "HMAC-SHA1",
            "addEmptyParamsToSign": true,
            "includeBodyHash": true,
            "addParamsToHeader": false,
            "realm": "",
            "version": "1.0",
            "nonce": "",
            "timestamp": "",
            "verifier": "",
            "callback": "",
            "tokenSecret": "",
            "token": "",
            "disableHeaderEncoding": false
          },
          "oauth2": {
            "addTokenTo": "header",
            "headerPrefix": "Bearer",
            "access_token": "",
            "grant_type": "password_credentials",
            "redirect_uri": "",
            "authUrl": "",
            "accessTokenUrl": "",
            "clientId": "",
            "clientSecret": "",
            "username": "",
            "password": "",
            "challengeAlgorithm": "S256",
            "code_verifier": "Bearer",
            "scope": "",
            "state": "",
            "client_authentication": "header",
            "refreshTokenUrl": "",
            "authRequestParams": [],
            "tokenRequestParams": [],
            "refreshRequestParams": []
          },
          "hawk": {
            "authId": "",
            "authKey": "",
            "algorithm": "",
            "user": "",
            "nonce": "",
            "extraData": "",
            "app": "",
            "delegation": "",
            "timestamp": "",
            "includePayloadHash": false
          },
          "awsv4": {
            "accessKey": "",
            "secretKey": "",
            "region": "",
            "service": "",
            "sessionToken": "",
            "addAuthDataToQuery": false
          },
          "ntlm": {
            "username": "",
            "password": "",
            "domain": "",
            "workstation": "",
            "disableRetryRequest": false
          },
          "edgegrid": {
            "accessToken": "",
            "clientToken": "",
            "clientSecret": "",
            "nonce": "",
            "timestamp": "",
            "baseURi": "",
            "headersToSign": ""
          },
          "noauth": {},
          "jwt": {
            "addTokenTo": "header",
            "algorithm": "HS256",
            "secret": "",
            "isSecretBase64Encoded": false,
            "payload": "",
            "headerPrefix": "Bearer",
            "queryParamKey": "token",
            "header": ""
          },
          "asap": {
            "alg": "HS256",
            "iss": "",
            "aud": "",
            "kid": "",
            "privateKey": "",
            "sub": "",
            "claims": "",
            "exp": ""
          }
        },
        "body": {
          "mode": "json",
          "parameter": [],
          "raw": "{\n    \"source_url\": \"https://en.wikipedia.org/wiki/Utah_Social_Media_Regulation_Act\"\n}",
          "raw_parameter": [],
          "raw_schema": {
            "type": "object"
          },
          "binary": null
        },
        "pre_tasks": [],
        "post_tasks": [],
        "header": {
          "parameter": []
        },
        "query": {
          "parameter": [],
          "query_add_equal": 1
        },
        "cookie": {
          "parameter": []
        },
        "restful": {
          "parameter": []
        }
      },
      "response": {
        "is_check_result": 1,
        "example": [
          {
            "example_id": "1",
            "raw": "",
            "raw_parameter": [],
            "expect": {
              "name": "Success",
              "is_default": 1,
              "code": "200",
              "content_type": "json",
              "verify_type": "schema",
              "mock": "",
              "schema": {
                "type": "object",
                "properties": {}
              }
            }
          },
          {
            "example_id": "2",
            "raw": "",
            "raw_parameter": [],
            "expect": {
              "name": "Failure",
              "is_default": -1,
              "code": "404",
              "content_type": "json",
              "verify_type": "schema",
              "mock": "",
              "schema": {
                "type": "object",
                "properties": {}
              }
            }
          }
        ]
      },
      "description": "",
      "tags": [],
      "ai_expect_enable": -1,
      "is_check_result": 1,
      "is_socket": 1,
      "is_locked": -1,
      "is_force": -1,
      "attribute_info": {},
      "protocol": "http/1.1",
      "ai_expect": {
        "list": [],
        "none_math_expect_id": ""
      },
      "is_deleted": -1,
      "is_conflicted": -1,
      "vscode_version": "1.7.12"
    },
    {
      "project_id": "",
      "target_id": "30319219790032",
      "parent_id": "2fef492936d006",
      "target_type": "api",
      "name": "Delete source",
      "sort": 9,
      "version": 0,
      "mark_id": "",
      "status": 1,
      "is_changed": -1,
      "is_create": -1,
      "method": "DELETE",
      "url": "http://localhost:5000/sources/68b02f09e93fd6bb08376603",
      "request": {
        "auth": {
          "type": "inherit",
          "kv": {
            "key": "",
            "value": "",
            "in": "header"
          },
          "bearer": {
            "key": ""
          },
          "basic": {
            "username": "",
            "password": ""
          },
          "digest": {
            "username": "",
            "password": "",
            "realm": "",
            "nonce": "",
            "algorithm": "MD5",
            "qop": "",
            "nc": "",
            "cnonce": "",
            "opaque": "",
            "disableRetryRequest": false
          },
          "oauth1": {
            "consumerKey": "",
            "consumerSecret": "",
            "signatureMethod": "HMAC-SHA1",
            "addEmptyParamsToSign": true,
            "includeBodyHash": true,
            "addParamsToHeader": false,
            "realm": "",
            "version": "1.0",
            "nonce": "",
            "timestamp": "",
            "verifier": "",
            "callback": "",
            "tokenSecret": "",
            "token": "",
            "disableHeaderEncoding": false
          },
          "oauth2": {
            "addTokenTo": "header",
            "headerPrefix": "Bearer",
            "access_token": "",
            "grant_type": "password_credentials",
            "redirect_uri": "",
            "authUrl": "",
            "accessTokenUrl": "",
            "clientId": "",
            "clientSecret": "",
            "username": "",
            "password": "",
            "challengeAlgorithm": "S256",
            "code_verifier": "Bearer",
            "scope": "",
            "state": "",
            "client_authentication": "header",
            "refreshTokenUrl": "",
            "authRequestParams": [],
            "tokenRequestParams": [],
            "refreshRequestParams": []
          },
          "hawk": {
            "authId": "",
            "authKey": "",
            "algorithm": "",
            "user": "",
            "nonce": "",
            "extraData": "",
            "app": "",
            "delegation": "",
            "timestamp": "",
            "includePayloadHash": false
          },
          "awsv4": {
            "accessKey": "",
            "secretKey": "",
            "region": "",
            "service": "",
            "sessionToken": "",
            "addAuthDataToQuery": false
          },
          "ntlm": {
            "username": "",
            "password": "",
            "domain": "",
            "workstation": "",
            "disableRetryRequest": false
          },
          "edgegrid": {
            "accessToken": "",
            "clientToken": "",
            "clientSecret": "",
            "nonce": "",
            "timestamp": "",
            "baseURi": "",
            "headersToSign": ""
          },
          "noauth": {},
          "jwt": {
            "addTokenTo": "header",
            "algorithm": "HS256",
            "secret": "",
            "isSecretBase64Encoded": false,
            "payload": "",
            "headerPrefix": "Bearer",
            "queryParamKey": "token",
            "header": ""
          },
          "asap": {
            "alg": "HS256",
            "iss": "",
            "aud": "",
            "kid": "",
            "privateKey": "",
            "sub": "",
            "claims": "",
            "exp": ""
          }
        },
        "body": {
          "mode": "none",
          "parameter": [],
          "raw": "",
          "raw_parameter": [],
          "raw_schema": {
            "type": "object"
          },
          "binary": null
        },
        "pre_tasks": [],
        "post_tasks": [],
        "header": {
          "parameter": []
        },
        "query": {
          "parameter": [],
          "query_add_equal": 1
        },
        "cookie": {
          "parameter": []
        },
        "restful": {
          "parameter": []
        }
      },
      "response": {
        "is_check_result": 1,
        "example": [
          {
            "example_id": "1",
            "raw": "",
            "raw_parameter": [],
            "expect": {
              "name": "Success",
              "is_default": 1,
              "code": "200",
              "content_type": "json",
              "verify_type": "schema",
              "mock": "",
              "schema": {
                "type": "object",
                "properties": {}
              }
            }
          },
          {
            "example_id": "2",
            "raw": "",
            "raw_parameter": [],
            "expect": {
              "name": "Failure",
              "is_default": -1,
              "code": "404",
              "content_type": "json",
              "verify_type": "schema",
              "mock": "",
              "schema": {
                "type": "object",
                "properties": {}
              }
            }
          }
        ]
      },
      "description": "",
      "tags": [],
      "ai_expect_enable": -1,
      "is_check_result": 1,
      "is_socket": 1,
      "is_locked": -1,
      "is_force": -1,
      "attribute_info": {},
      "protocol": "http/1.1",
      "ai_expect": {
        "list": [],
        "none_math_expect_id": ""
      },
      "is_deleted": -1,
      "is_conflicted": -1,
      "vscode_version": "1.7.12"
    },
    {
      "project_id": "",
      "target_id": "305921b6f9e005",
      "parent_id": "2fef492936d006",
      "target_type": "api",
      "name": "Get source content",
      "sort": 10,
      "version": 0,
      "mark_id": "",
      "status": 1,
      "is_changed": -1,
      "is_create": -1,
      "method": "GET",
      "url": "http://localhost:5000/sources/content?url=https://gov.com/",
      "request": {
        "auth": {
          "type": "inherit",
          "kv": {
            "key": "",
            "value": "",
            "in": "header"
          },
          "bearer": {
            "key": ""
          },
          "basic": {
            "username": "",
            "password": ""
          },
          "digest": {
            "username": "",
            "password": "",
            "realm": "",
            "nonce": "",
            "algorithm": "MD5",
            "qop": "",
            "nc": "",
            "cnonce": "",
            "opaque": "",
            "disableRetryRequest": false
          },
          "oauth1": {
            "consumerKey": "",
            "consumerSecret": "",
            "signatureMethod": "HMAC-SHA1",
            "addEmptyParamsToSign": true,
            "includeBodyHash": true,
            "addParamsToHeader": false,
            "realm": "",
            "version": "1.0",
            "nonce": "",
            "timestamp": "",
            "verifier": "",
            "callback": "",
            "tokenSecret": "",
            "token": "",
            "disableHeaderEncoding": false
          },
          "oauth2": {
            "addTokenTo": "header",
            "headerPrefix": "Bearer",
            "access_token": "",
            "grant_type": "password_credentials",
            "redirect_uri": "",
            "authUrl": "",
            "accessTokenUrl": "",
            "clientId": "",
            "clientSecret": "",
            "username": "",
            "password": "",
            "challengeAlgorithm": "S256",
            "code_verifier": "Bearer",
            "scope": "",
            "state": "",
            "client_authentication": "header",
            "refreshTokenUrl": "",
            "authRequestParams": [],
            "tokenRequestParams": [],
            "refreshRequestParams": []
          },
          "hawk": {
            "authId": "",
            "authKey": "",
            "algorithm": "",
            "user": "",
            "nonce": "",
            "extraData": "",
            "app": "",
            "delegation": "",
            "timestamp": "",
            "includePayloadHash": false
          },
          "awsv4": {
            "accessKey": "",
            "secretKey": "",
            "region": "",
            "service": "",
            "sessionToken": "",
            "addAuthDataToQuery": false
          },
          "ntlm": {
            "username": "",
            "password": "",
            "domain": "",
            "workstation": "",
            "disableRetryRequest": false
          },
          "edgegrid": {
            "accessToken": "",
            "clientToken": "",
            "clientSecret": "",
            "nonce": "",
            "timestamp": "",
            "baseURi": "",
            "headersToSign": ""
          },
          "noauth": {},
          "jwt": {
            "addTokenTo": "header",
            "algorithm": "HS256",
            "secret": "",
            "isSecretBase64Encoded": false,
            "payload": "",
            "headerPrefix": "Bearer",
            "queryParamKey": "token",
            "header": ""
          },
          "asap": {
            "alg": "HS256",
            "iss": "",
            "aud": "",
            "kid": "",
            "privateKey": "",
            "sub": "",
            "claims": "",
            "exp": ""
          }
        },
        "body": {
          "mode": "none",
          "parameter": [],
          "raw": "",
          "raw_parameter": [],
          "raw_schema": {
            "type": "object"
          },
          "binary": null
        },
        "pre_tasks": [],
        "post_tasks": [],
        "header": {
          "parameter": []
        },
        "query": {
          "parameter": [
            {
              "param_id": "305a452f76d007",
              "field_type": "String",
              "is_checked": 1,
              "key": "url",
              "not_null": 1,
              "value": "https://gov.com/",
              "description": ""
            }
          ],
          "query_add_equal": 1
        },
        "cookie": {
          "parameter": []
        },
        "restful": {
          "parameter": []
        }
      },
      "response": {
        "is_check_result": 1,
        "example": [
          {
            "example_id": "1",
            "raw": "",
            "raw_parameter": [],
            "expect": {
              "name": "Success",
              "is_default": 1,
              "code": "200",
              "content_type": "json",
              "verify_type": "schema",
              "mock": "",
              "schema": {
                "type": "object",
                "properties": {}
              }
            }
          },
          {
            "example_id": "2",
            "raw": "",
            "raw_parameter": [],
            "expect": {
              "name": "Failure",
              "is_default": -1,
              "code": "404",
              "content_type": "json",
              "verify_type": "schema",
              "mock": "",
              "schema": {
                "type": "object",
                "properties": {}
              }
            }
          }
        ]
      },
      "description": "",
      "tags": [],
      "ai_expect_enable": -1,
      "is_check_result": 1,
      "is_socket": 1,
      "is_locked": -1,
      "is_force": -1,
      "attribute_info": {},
      "protocol": "http/1.1",
      "ai_expect": {
        "list": [],
        "none_math_expect_id": ""
      },
      "is_deleted": -1,
      "is_conflicted": -1,
      "vscode_version": "1.7.12"
    },
    {
      "project_id": "",
      "target_id": "305bb0e379e006",
      "parent_id": "2fef492936d006",
      "target_type": "api",
      "name": "Add source content",
      "sort": 11,
      "version": 0,
      "mark_id": "",
      "status": 1,
      "is_changed": -1,
      "is_create": -1,
      "method": "POST",
      "url": "http://localhost:5000/sources/content",
      "request": {
        "auth": {
          "type": "inherit",
          "kv": {
            "key": "",
            "value": "",
            "in": "header"
          },
          "bearer": {
            "key": ""
          },
          "basic": {
            "username": "",
            "password": ""
          },
          "digest": {
            "username": "",
            "password": "",
            "realm": "",
            "nonce": "",
            "algorithm": "MD5",
            "qop": "",
            "nc": "",
            "cnonce": "",
            "opaque": "",
            "disableRetryRequest": false
          },
          "oauth1": {
            "consumerKey": "",
            "consumerSecret": "",
            "signatureMethod": "HMAC-SHA1",
            "addEmptyParamsToSign": true,
            "includeBodyHash": true,
            "addParamsToHeader": false,
            "realm": "",
            "version": "1.0",
            "nonce": "",
            "timestamp": "",
            "verifier": "",
            "callback": "",
            "tokenSecret": "",
            "token": "",
            "disableHeaderEncoding": false
          },
          "oauth2": {
            "addTokenTo": "header",
            "headerPrefix": "Bearer",
            "access_token": "",
            "grant_type": "password_credentials",
            "redirect_uri": "",
            "authUrl": "",
            "accessTokenUrl": "",
            "clientId": "",
            "clientSecret": "",
            "username": "",
            "password": "",
            "challengeAlgorithm": "S256",
            "code_verifier": "Bearer",
            "scope": "",
            "state": "",
            "client_authentication": "header",
            "refreshTokenUrl": "",
            "authRequestParams": [],
            "tokenRequestParams": [],
            "refreshRequestParams": []
          },
          "hawk": {
            "authId": "",
            "authKey": "",
            "algorithm": "",
            "user": "",
            "nonce": "",
            "extraData": "",
            "app": "",
            "delegation": "",
            "timestamp": "",
            "includePayloadHash": false
          },
          "awsv4": {
            "accessKey": "",
            "secretKey": "",
            "region": "",
            "service": "",
            "sessionToken": "",
            "addAuthDataToQuery": false
          },
          "ntlm": {
            "username": "",
            "password": "",
            "domain": "",
            "workstation": "",
            "disableRetryRequest": false
          },
          "edgegrid": {
            "accessToken": "",
            "clientToken": "",
            "clientSecret": "",
            "nonce": "",
            "timestamp": "",
            "baseURi": "",
            "headersToSign": ""
          },
          "noauth": {},
          "jwt": {
            "addTokenTo": "header",
            "algorithm": "HS256",
            "secret": "",
            "isSecretBase64Encoded": false,
            "payload": "",
            "headerPrefix": "Bearer",
            "queryParamKey": "token",
            "header": ""
          },
          "asap": {
            "alg": "HS256",
            "iss": "",
            "aud": "",
            "kid": "",
            "privateKey": "",
            "sub": "",
            "claims": "",
            "exp": ""
          }
        },
        "body": {
          "mode": "json",
          "parameter": [],
          "raw": "{\n    \"source_url\": \"https://gov.com\",\n    \"content\": \"The content of the website\"\n}",
          "raw_parameter": [],
          "raw_schema": {
            "type": "object"
          },
          "binary": null
        },
        "pre_tasks": [],
        "post_tasks": [],
        "header": {
          "parameter": []
        },
        "query": {
          "parameter": [
            {
              "description": "",
              "field_type": "String",
              "is_checked": 1,
              "key": "",
              "value": "",
              "not_null": 1,
              "static": true,
              "param_id": "305bb443f6d005"
            }
          ],
          "query_add_equal": 1
        },
        "cookie": {
          "parameter": []
        },
        "restful": {
          "parameter": []
        }
      },
      "response": {
        "is_check_result": 1,
        "example": [
          {
            "example_id": "1",
            "raw": "",
            "raw_parameter": [],
            "expect": {
              "name": "Success",
              "is_default": 1,
              "code": "200",
              "content_type": "json",
              "verify_type": "schema",
              "mock": "",
              "schema": {
                "type": "object",
                "properties": {}
              }
            }
          },
          {
            "example_id": "2",
            "raw": "",
            "raw_parameter": [],
            "expect": {
              "name": "Failure",
              "is_default": -1,
              "code": "404",
              "content_type": "json",
              "verify_type": "schema",
              "mock": "",
              "schema": {
                "type": "object",
                "properties": {}
              }
            }
          }
        ]
      },
      "description": "",
      "tags": [],
      "ai_expect_enable": -1,
      "is_check_result": 1,
      "is_socket": 1,
      "is_locked": -1,
      "is_force": -1,
      "attribute_info": {},
      "protocol": "http/1.1",
      "ai_expect": {
        "list": [],
        "none_math_expect_id": ""
      },
      "is_deleted": -1,
      "is_conflicted": -1,
      "vscode_version": "1.7.12"
    },
    {
      "project_id": "",
      "target_id": "3089f96ff9e007",
      "parent_id": "2fef492936d006",
      "target_type": "api",
      "name": "Check sources",
      "sort": 12,
      "version": 0,
      "mark_id": "",
      "status": 1,
      "is_changed": -1,
      "is_create": -1,
      "method": "POST",
      "url": "http://localhost:5000/sources/new",
      "request": {
        "auth": {
          "type": "inherit",
          "kv": {
            "key": "",
            "value": "",
            "in": "header"
          },
          "bearer": {
            "key": ""
          },
          "basic": {
            "username": "",
            "password": ""
          },
          "digest": {
            "username": "",
            "password": "",
            "realm": "",
            "nonce": "",
            "algorithm": "MD5",
            "qop": "",
            "nc": "",
            "cnonce": "",
            "opaque": "",
            "disableRetryRequest": false
          },
          "oauth1": {
            "consumerKey": "",
            "consumerSecret": "",
            "signatureMethod": "HMAC-SHA1",
            "addEmptyParamsToSign": true,
            "includeBodyHash": true,
            "addParamsToHeader": false,
            "realm": "",
            "version": "1.0",
            "nonce": "",
            "timestamp": "",
            "verifier": "",
            "callback": "",
            "tokenSecret": "",
            "token": "",
            "disableHeaderEncoding": false
          },
          "oauth2": {
            "addTokenTo": "header",
            "headerPrefix": "Bearer",
            "access_token": "",
            "grant_type": "password_credentials",
            "redirect_uri": "",
            "authUrl": "",
            "accessTokenUrl": "",
            "clientId": "",
            "clientSecret": "",
            "username": "",
            "password": "",
            "challengeAlgorithm": "S256",
            "code_verifier": "Bearer",
            "scope": "",
            "state": "",
            "client_authentication": "header",
            "refreshTokenUrl": "",
            "authRequestParams": [],
            "tokenRequestParams": [],
            "refreshRequestParams": []
          },
          "hawk": {
            "authId": "",
            "authKey": "",
            "algorithm": "",
            "user": "",
            "nonce": "",
            "extraData": "",
            "app": "",
            "delegation": "",
            "timestamp": "",
            "includePayloadHash": false
          },
          "awsv4": {
            "accessKey": "",
            "secretKey": "",
            "region": "",
            "service": "",
            "sessionToken": "",
            "addAuthDataToQuery": false
          },
          "ntlm": {
            "username": "",
            "password": "",
            "domain": "",
            "workstation": "",
            "disableRetryRequest": false
          },
          "edgegrid": {
            "accessToken": "",
            "clientToken": "",
            "clientSecret": "",
            "nonce": "",
            "timestamp": "",
            "baseURi": "",
            "headersToSign": ""
          },
          "noauth": {},
          "jwt": {
            "addTokenTo": "header",
            "algorithm": "HS256",
            "secret": "",
            "isSecretBase64Encoded": false,
            "payload": "",
            "headerPrefix": "Bearer",
            "queryParamKey": "token",
            "header": ""
          },
          "asap": {
            "alg": "HS256",
            "iss": "",
            "aud": "",
            "kid": "",
            "privateKey": "",
            "sub": "",
            "claims": "",
            "exp": ""
          }
        },
        "body": {
          "mode": "json",
          "parameter": [],
          "raw": "{\n    \"source_url\": \"https://leginfo.legislature.ca.gov/faces/billTextClient.xhtml?bill_id=202320240SB976\"\n}",
          "raw_parameter": [],
          "raw_schema": {
            "type": "object"
          },
          "binary": null
        },
        "pre_tasks": [],
        "post_tasks": [],
        "header": {
          "parameter": []
        },
        "query": {
          "parameter": [],
          "query_add_equal": 1
        },
        "cookie": {
          "parameter": []
        },
        "restful": {
          "parameter": []
        }
      },
      "response": {
        "is_check_result": 1,
        "example": [
          {
            "example_id": "1",
            "raw": "",
            "raw_parameter": [],
            "expect": {
              "name": "Success",
              "is_default": 1,
              "code": "200",
              "content_type": "json",
              "verify_type": "schema",
              "mock": "",
              "schema": {
                "type": "object",
                "properties": {}
              }
            }
          },
          {
            "example_id": "2",
            "raw": "",
            "raw_parameter": [],
            "expect": {
              "name": "Failure",
              "is_default": -1,
              "code": "404",
              "content_type": "json",
              "verify_type": "schema",
              "mock": "",
              "schema": {
                "type": "object",
                "properties": {}
              }
            }
          }
        ]
      },
      "description": "",
      "tags": [],
      "ai_expect_enable": -1,
      "is_check_result": 1,
      "is_socket": 1,
      "is_locked": -1,
      "is_force": -1,
      "attribute_info": {},
      "protocol": "http/1.1",
      "ai_expect": {
        "list": [],
        "none_math_expect_id": ""
      },
      "is_deleted": -1,
      "is_conflicted": -1,
      "vscode_version": "1.7.12"
    },
    {
      "project_id": "",
      "target_id": "31518696774005",
      "parent_id": "2fef492936d006",
      "target_type": "api",
      "name": "Analyze sources",
      "sort": 14,
      "version": 0,
      "mark_id": "",
      "status": 1,
      "is_changed": -1,
      "is_create": -1,
      "method": "POST",
      "url": "http://localhost:5000/compliance/analyze-sources",
      "request": {
        "auth": {
          "type": "inherit",
          "kv": {
            "key": "",
            "value": "",
            "in": "header"
          },
          "bearer": {
            "key": ""
          },
          "basic": {
            "username": "",
            "password": ""
          },
          "digest": {
            "username": "",
            "password": "",
            "realm": "",
            "nonce": "",
            "algorithm": "MD5",
            "qop": "",
            "nc": "",
            "cnonce": "",
            "opaque": "",
            "disableRetryRequest": false
          },
          "oauth1": {
            "consumerKey": "",
            "consumerSecret": "",
            "signatureMethod": "HMAC-SHA1",
            "addEmptyParamsToSign": true,
            "includeBodyHash": true,
            "addParamsToHeader": false,
            "realm": "",
            "version": "1.0",
            "nonce": "",
            "timestamp": "",
            "verifier": "",
            "callback": "",
            "tokenSecret": "",
            "token": "",
            "disableHeaderEncoding": false
          },
          "oauth2": {
            "addTokenTo": "header",
            "headerPrefix": "Bearer",
            "access_token": "",
            "grant_type": "password_credentials",
            "redirect_uri": "",
            "authUrl": "",
            "accessTokenUrl": "",
            "clientId": "",
            "clientSecret": "",
            "username": "",
            "password": "",
            "challengeAlgorithm": "S256",
            "code_verifier": "Bearer",
            "scope": "",
            "state": "",
            "client_authentication": "header",
            "refreshTokenUrl": "",
            "authRequestParams": [],
            "tokenRequestParams": [],
            "refreshRequestParams": []
          },
          "hawk": {
            "authId": "",
            "authKey": "",
            "algorithm": "",
            "user": "",
            "nonce": "",
            "extraData": "",
            "app": "",
            "delegation": "",
            "timestamp": "",
            "includePayloadHash": false
          },
          "awsv4": {
            "accessKey": "",
            "secretKey": "",
            "region": "",
            "service": "",
            "sessionToken": "",
            "addAuthDataToQuery": false
          },
          "ntlm": {
            "username": "",
            "password": "",
            "domain": "",
            "workstation": "",
            "disableRetryRequest": false
          },
          "edgegrid": {
            "accessToken": "",
            "clientToken": "",
            "clientSecret": "",
            "nonce": "",
            "timestamp": "",
            "baseURi": "",
            "headersToSign": ""
          },
          "noauth": {},
          "jwt": {
            "addTokenTo": "header",
            "algorithm": "HS256",
            "secret": "",
            "isSecretBase64Encoded": false,
            "payload": "",
            "headerPrefix": "Bearer",
            "queryParamKey": "token",
            "header": ""
          },
          "asap": {
            "alg": "HS256",
            "iss": "",
            "aud": "",
            "kid": "",
            "privateKey": "",
            "sub": "",
            "claims": "",
            "exp": ""
          }
        },
        "body": {
          "mode": "none",
          "parameter": [],
          "raw": "",
          "raw_parameter": [],
          "raw_schema": {
            "type": "object"
          },
          "binary": null
        },
        "pre_tasks": [],
        "post_tasks": [],
        "header": {
          "parameter": []
        },
        "query": {
          "parameter": [],
          "query_add_equal": 1
        },
        "cookie": {
          "parameter": []
        },
        "restful": {
          "parameter": []
        }
      },
      "response": {
        "is_check_result": 1,
        "example": [
          {
            "example_id": "1",
            "raw": "",
            "raw_parameter": [],
            "expect": {
              "name": "Success",
              "is_default": 1,
              "code": "200",
              "content_type": "json",
              "verify_type": "schema",
              "mock": "",
              "schema": {
                "type": "object",
                "properties": {}
              }
            }
          },
          {
            "example_id": "2",
            "raw": "",
            "raw_parameter": [],
            "expect": {
              "name": "Failure",
              "is_default": -1,
              "code": "404",
              "content_type": "json",
              "verify_type": "schema",
              "mock": "",
              "schema": {
                "type": "object",
                "properties": {}
              }
            }
          }
        ]
      },
      "description": "",
      "tags": [],
      "ai_expect_enable": -1,
      "is_check_result": 1,
      "is_socket": 1,
      "is_locked": -1,
      "is_force": -1,
      "attribute_info": {},
      "protocol": "http/1.1",
      "ai_expect": {
        "list": [],
        "none_math_expect_id": ""
      },
      "is_deleted": -1,
      "is_conflicted": -1,
      "vscode_version": "1.7.12"
    },
    {
      "project_id": "",
      "target_id": "31545daeb74006",
      "parent_id": "2fef492936d006",
      "target_type": "api",
      "name": "Analyze feature",
      "sort": 15,
      "version": 0,
      "mark_id": "",
      "status": 1,
      "is_changed": -1,
      "is_create": -1,
      "method": "POST",
      "url": "http://localhost:5000/compliance/analyze-feature",
      "request": {
        "auth": {
          "type": "inherit",
          "kv": {
            "key": "",
            "value": "",
            "in": "header"
          },
          "bearer": {
            "key": ""
          },
          "basic": {
            "username": "",
            "password": ""
          },
          "digest": {
            "username": "",
            "password": "",
            "realm": "",
            "nonce": "",
            "algorithm": "MD5",
            "qop": "",
            "nc": "",
            "cnonce": "",
            "opaque": "",
            "disableRetryRequest": false
          },
          "oauth1": {
            "consumerKey": "",
            "consumerSecret": "",
            "signatureMethod": "HMAC-SHA1",
            "addEmptyParamsToSign": true,
            "includeBodyHash": true,
            "addParamsToHeader": false,
            "realm": "",
            "version": "1.0",
            "nonce": "",
            "timestamp": "",
            "verifier": "",
            "callback": "",
            "tokenSecret": "",
            "token": "",
            "disableHeaderEncoding": false
          },
          "oauth2": {
            "addTokenTo": "header",
            "headerPrefix": "Bearer",
            "access_token": "",
            "grant_type": "password_credentials",
            "redirect_uri": "",
            "authUrl": "",
            "accessTokenUrl": "",
            "clientId": "",
            "clientSecret": "",
            "username": "",
            "password": "",
            "challengeAlgorithm": "S256",
            "code_verifier": "Bearer",
            "scope": "",
            "state": "",
            "client_authentication": "header",
            "refreshTokenUrl": "",
            "authRequestParams": [],
            "tokenRequestParams": [],
            "refreshRequestParams": []
          },
          "hawk": {
            "authId": "",
            "authKey": "",
            "algorithm": "",
            "user": "",
            "nonce": "",
            "extraData": "",
            "app": "",
            "delegation": "",
            "timestamp": "",
            "includePayloadHash": false
          },
          "awsv4": {
            "accessKey": "",
            "secretKey": "",
            "region": "",
            "service": "",
            "sessionToken": "",
            "addAuthDataToQuery": false
          },
          "ntlm": {
            "username": "",
            "password": "",
            "domain": "",
            "workstation": "",
            "disableRetryRequest": false
          },
          "edgegrid": {
            "accessToken": "",
            "clientToken": "",
            "clientSecret": "",
            "nonce": "",
            "timestamp": "",
            "baseURi": "",
            "headersToSign": ""
          },
          "noauth": {},
          "jwt": {
            "addTokenTo": "header",
            "algorithm": "HS256",
            "secret": "",
            "isSecretBase64Encoded": false,
            "payload": "",
            "headerPrefix": "Bearer",
            "queryParamKey": "token",
            "header": ""
          },
          "asap": {
            "alg": "HS256",
            "iss": "",
            "aud": "",
            "kid": "",
            "privateKey": "",
            "sub": "",
            "claims": "",
            "exp": ""
          }
        },
        "body": {
          "mode": "none",
          "parameter": [],
          "raw": "",
          "raw_parameter": [],
          "raw_schema": {
            "type": "object"
          },
          "binary": null
        },
        "pre_tasks": [],
        "post_tasks": [],
        "header": {
          "parameter": []
        },
        "query": {
          "parameter": [],
          "query_add_equal": 1
        },
        "cookie": {
          "parameter": []
        },
        "restful": {
          "parameter": []
        }
      },
      "response": {
        "is_check_result": 1,
        "example": [
          {
            "example_id": "1",
            "raw": "",
            "raw_parameter": [],
            "expect": {
              "name": "Success",
              "is_default": 1,
              "code": "200",
              "content_type": "json",
              "verify_type": "schema",
              "mock": "",
              "schema": {
                "type": "object",
                "properties": {}
              }
            }
          },
          {
            "example_id": "2",
            "raw": "",
            "raw_parameter": [],
            "expect": {
              "name": "Failure",
              "is_default": -1,
              "code": "404",
              "content_type": "json",
              "verify_type": "schema",
              "mock": "",
              "schema": {
                "type": "object",
                "properties": {}
              }
            }
          }
        ]
      },
      "description": "",
      "tags": [],
      "ai_expect_enable": -1,
      "is_check_result": 1,
      "is_socket": 1,
      "is_locked": -1,
      "is_force": -1,
      "attribute_info": {},
      "protocol": "http/1.1",
      "ai_expect": {
        "list": [],
        "none_math_expect_id": ""
      },
      "is_deleted": -1,
      "is_conflicted": -1,
      "vscode_version": "1.7.12"
    },
    {
      "project_id": "",
      "target_id": "315518af774007",
      "parent_id": "2fef492936d006",
      "target_type": "api",
      "name": "Refresh sources contents",
      "sort": 13,
      "version": 0,
      "mark_id": "",
      "status": 1,
      "is_changed": -1,
      "is_create": -1,
      "method": "POST",
      "url": "http://localhost:5000/sources/refresh-all",
      "request": {
        "auth": {
          "type": "inherit",
          "kv": {
            "key": "",
            "value": "",
            "in": "header"
          },
          "bearer": {
            "key": ""
          },
          "basic": {
            "username": "",
            "password": ""
          },
          "digest": {
            "username": "",
            "password": "",
            "realm": "",
            "nonce": "",
            "algorithm": "MD5",
            "qop": "",
            "nc": "",
            "cnonce": "",
            "opaque": "",
            "disableRetryRequest": false
          },
          "oauth1": {
            "consumerKey": "",
            "consumerSecret": "",
            "signatureMethod": "HMAC-SHA1",
            "addEmptyParamsToSign": true,
            "includeBodyHash": true,
            "addParamsToHeader": false,
            "realm": "",
            "version": "1.0",
            "nonce": "",
            "timestamp": "",
            "verifier": "",
            "callback": "",
            "tokenSecret": "",
            "token": "",
            "disableHeaderEncoding": false
          },
          "oauth2": {
            "addTokenTo": "header",
            "headerPrefix": "Bearer",
            "access_token": "",
            "grant_type": "password_credentials",
            "redirect_uri": "",
            "authUrl": "",
            "accessTokenUrl": "",
            "clientId": "",
            "clientSecret": "",
            "username": "",
            "password": "",
            "challengeAlgorithm": "S256",
            "code_verifier": "Bearer",
            "scope": "",
            "state": "",
            "client_authentication": "header",
            "refreshTokenUrl": "",
            "authRequestParams": [],
            "tokenRequestParams": [],
            "refreshRequestParams": []
          },
          "hawk": {
            "authId": "",
            "authKey": "",
            "algorithm": "",
            "user": "",
            "nonce": "",
            "extraData": "",
            "app": "",
            "delegation": "",
            "timestamp": "",
            "includePayloadHash": false
          },
          "awsv4": {
            "accessKey": "",
            "secretKey": "",
            "region": "",
            "service": "",
            "sessionToken": "",
            "addAuthDataToQuery": false
          },
          "ntlm": {
            "username": "",
            "password": "",
            "domain": "",
            "workstation": "",
            "disableRetryRequest": false
          },
          "edgegrid": {
            "accessToken": "",
            "clientToken": "",
            "clientSecret": "",
            "nonce": "",
            "timestamp": "",
            "baseURi": "",
            "headersToSign": ""
          },
          "noauth": {},
          "jwt": {
            "addTokenTo": "header",
            "algorithm": "HS256",
            "secret": "",
            "isSecretBase64Encoded": false,
            "payload": "",
            "headerPrefix": "Bearer",
            "queryParamKey": "token",
            "header": ""
          },
          "asap": {
            "alg": "HS256",
            "iss": "",
            "aud": "",
            "kid": "",
            "privateKey": "",
            "sub": "",
            "claims": "",
            "exp": ""
          }
        },
        "body": {
          "mode": "none",
          "parameter": [],
          "raw": "",
          "raw_parameter": [],
          "raw_schema": {
            "type": "object"
          },
          "binary": null
        },
        "pre_tasks": [],
        "post_tasks": [],
        "header": {
          "parameter": []
        },
        "query": {
          "parameter": [],
          "query_add_equal": 1
        },
        "cookie": {
          "parameter": []
        },
        "restful": {
          "parameter": []
        }
      },
      "response": {
        "is_check_result": 1,
        "example": [
          {
            "example_id": "1",
            "raw": "",
            "raw_parameter": [],
            "expect": {
              "name": "Success",
              "is_default": 1,
              "code": "200",
              "content_type": "json",
              "verify_type": "schema",
              "mock": "",
              "schema": {
                "type": "object",
                "properties": {}
              }
            }
          },
          {
            "example_id": "2",
            "raw": "",
            "raw_parameter": [],
            "expect": {
              "name": "Failure",
              "is_default": -1,
              "code": "404",
              "content_type": "json",
              "verify_type": "schema",
              "mock": "",
              "schema": {
                "type": "object",
                "properties": {}
              }
            }
          }
        ]
      },
      "description": "",
      "tags": [],
      "ai_expect_enable": -1,
      "is_check_result": 1,
      "is_socket": 1,
      "is_locked": -1,
      "is_force": -1,
      "attribute_info": {},
      "protocol": "http/1.1",
      "ai_expect": {
        "list": [],
        "none_math_expect_id": ""
      },
      "is_deleted": -1,
      "is_conflicted": -1,
      "vscode_version": "1.7.12"
    },
    {
      "project_id": "",
      "target_id": "31dd3ed4f7400b",
      "parent_id": "2fef492936d006",
      "target_type": "api",
      "name": "Create audit report",
      "sort": 16,
      "version": 0,
      "mark_id": "",
      "status": 1,
      "is_changed": -1,
      "is_create": -1,
      "method": "POST",
      "url": "http://localhost:5000/audit-report",
      "request": {
        "auth": {
          "type": "inherit",
          "kv": {
            "key": "",
            "value": "",
            "in": "header"
          },
          "bearer": {
            "key": ""
          },
          "basic": {
            "username": "",
            "password": ""
          },
          "digest": {
            "username": "",
            "password": "",
            "realm": "",
            "nonce": "",
            "algorithm": "MD5",
            "qop": "",
            "nc": "",
            "cnonce": "",
            "opaque": "",
            "disableRetryRequest": false
          },
          "oauth1": {
            "consumerKey": "",
            "consumerSecret": "",
            "signatureMethod": "HMAC-SHA1",
            "addEmptyParamsToSign": true,
            "includeBodyHash": true,
            "addParamsToHeader": false,
            "realm": "",
            "version": "1.0",
            "nonce": "",
            "timestamp": "",
            "verifier": "",
            "callback": "",
            "tokenSecret": "",
            "token": "",
            "disableHeaderEncoding": false
          },
          "oauth2": {
            "addTokenTo": "header",
            "headerPrefix": "Bearer",
            "access_token": "",
            "grant_type": "password_credentials",
            "redirect_uri": "",
            "authUrl": "",
            "accessTokenUrl": "",
            "clientId": "",
            "clientSecret": "",
            "username": "",
            "password": "",
            "challengeAlgorithm": "S256",
            "code_verifier": "Bearer",
            "scope": "",
            "state": "",
            "client_authentication": "header",
            "refreshTokenUrl": "",
            "authRequestParams": [],
            "tokenRequestParams": [],
            "refreshRequestParams": []
          },
          "hawk": {
            "authId": "",
            "authKey": "",
            "algorithm": "",
            "user": "",
            "nonce": "",
            "extraData": "",
            "app": "",
            "delegation": "",
            "timestamp": "",
            "includePayloadHash": false
          },
          "awsv4": {
            "accessKey": "",
            "secretKey": "",
            "region": "",
            "service": "",
            "sessionToken": "",
            "addAuthDataToQuery": false
          },
          "ntlm": {
            "username": "",
            "password": "",
            "domain": "",
            "workstation": "",
            "disableRetryRequest": false
          },
          "edgegrid": {
            "accessToken": "",
            "clientToken": "",
            "clientSecret": "",
            "nonce": "",
            "timestamp": "",
            "baseURi": "",
            "headersToSign": ""
          },
          "noauth": {},
          "jwt": {
            "addTokenTo": "header",
            "algorithm": "HS256",
            "secret": "",
            "isSecretBase64Encoded": false,
            "payload": "",
            "headerPrefix": "Bearer",
            "queryParamKey": "token",
            "header": ""
          },
          "asap": {
            "alg": "HS256",
            "iss": "",
            "aud": "",
            "kid": "",
            "privateKey": "",
            "sub": "",
            "claims": "",
            "exp": ""
          }
        },
        "body": {
          "mode": "json",
          "parameter": [],
          "raw": "{\n    \"feature_id\": \"68b29fca38abb5d5d6e3035b\", \n    \"source_ids\": [\"68b02f14e93fd6bb08376604\"],\n    \"needs_action\": true,\n    \"status_change_to\": \"critical\",\n    \"reason\": \"CCCCalifornia SB976 requires notification restrictions during 12am-6am and 8am-3pm Monday-Friday unless parental consent. Current curfew blocker only covers Utah minors, missing California compliance requirements.\",\n    \"confidence\": \"96\",\n    \"original_status\": \"pass\"\n  }",
          "raw_parameter": [],
          "raw_schema": {
            "type": "object"
          },
          "binary": null
        },
        "pre_tasks": [],
        "post_tasks": [],
        "header": {
          "parameter": []
        },
        "query": {
          "parameter": [],
          "query_add_equal": 1
        },
        "cookie": {
          "parameter": []
        },
        "restful": {
          "parameter": []
        }
      },
      "response": {
        "is_check_result": 1,
        "example": [
          {
            "example_id": "1",
            "raw": "",
            "raw_parameter": [],
            "expect": {
              "name": "Success",
              "is_default": 1,
              "code": "200",
              "content_type": "json",
              "verify_type": "schema",
              "mock": "",
              "schema": {
                "type": "object",
                "properties": {}
              }
            }
          },
          {
            "example_id": "2",
            "raw": "",
            "raw_parameter": [],
            "expect": {
              "name": "Failure",
              "is_default": -1,
              "code": "404",
              "content_type": "json",
              "verify_type": "schema",
              "mock": "",
              "schema": {
                "type": "object",
                "properties": {}
              }
            }
          }
        ]
      },
      "description": "",
      "tags": [],
      "ai_expect_enable": -1,
      "is_check_result": 1,
      "is_socket": 1,
      "is_locked": -1,
      "is_force": -1,
      "attribute_info": {},
      "protocol": "http/1.1",
      "ai_expect": {
        "list": [],
        "none_math_expect_id": ""
      },
      "is_deleted": -1,
      "is_conflicted": -1,
      "vscode_version": "1.7.12"
    },
    {
      "project_id": "",
      "target_id": "31eb7a11b7400c",
      "parent_id": "2fef492936d006",
      "target_type": "api",
      "name": "Get audit report",
      "sort": 18,
      "version": 0,
      "mark_id": "",
      "status": 1,
      "is_changed": -1,
      "is_create": -1,
      "method": "GET",
      "url": "http://localhost:5000/audit-report/68b1f77d7aef5b9eb6ca47b1",
      "request": {
        "auth": {
          "type": "inherit",
          "kv": {
            "key": "",
            "value": "",
            "in": "header"
          },
          "bearer": {
            "key": ""
          },
          "basic": {
            "username": "",
            "password": ""
          },
          "digest": {
            "username": "",
            "password": "",
            "realm": "",
            "nonce": "",
            "algorithm": "MD5",
            "qop": "",
            "nc": "",
            "cnonce": "",
            "opaque": "",
            "disableRetryRequest": false
          },
          "oauth1": {
            "consumerKey": "",
            "consumerSecret": "",
            "signatureMethod": "HMAC-SHA1",
            "addEmptyParamsToSign": true,
            "includeBodyHash": true,
            "addParamsToHeader": false,
            "realm": "",
            "version": "1.0",
            "nonce": "",
            "timestamp": "",
            "verifier": "",
            "callback": "",
            "tokenSecret": "",
            "token": "",
            "disableHeaderEncoding": false
          },
          "oauth2": {
            "addTokenTo": "header",
            "headerPrefix": "Bearer",
            "access_token": "",
            "grant_type": "password_credentials",
            "redirect_uri": "",
            "authUrl": "",
            "accessTokenUrl": "",
            "clientId": "",
            "clientSecret": "",
            "username": "",
            "password": "",
            "challengeAlgorithm": "S256",
            "code_verifier": "Bearer",
            "scope": "",
            "state": "",
            "client_authentication": "header",
            "refreshTokenUrl": "",
            "authRequestParams": [],
            "tokenRequestParams": [],
            "refreshRequestParams": []
          },
          "hawk": {
            "authId": "",
            "authKey": "",
            "algorithm": "",
            "user": "",
            "nonce": "",
            "extraData": "",
            "app": "",
            "delegation": "",
            "timestamp": "",
            "includePayloadHash": false
          },
          "awsv4": {
            "accessKey": "",
            "secretKey": "",
            "region": "",
            "service": "",
            "sessionToken": "",
            "addAuthDataToQuery": false
          },
          "ntlm": {
            "username": "",
            "password": "",
            "domain": "",
            "workstation": "",
            "disableRetryRequest": false
          },
          "edgegrid": {
            "accessToken": "",
            "clientToken": "",
            "clientSecret": "",
            "nonce": "",
            "timestamp": "",
            "baseURi": "",
            "headersToSign": ""
          },
          "noauth": {},
          "jwt": {
            "addTokenTo": "header",
            "algorithm": "HS256",
            "secret": "",
            "isSecretBase64Encoded": false,
            "payload": "",
            "headerPrefix": "Bearer",
            "queryParamKey": "token",
            "header": ""
          },
          "asap": {
            "alg": "HS256",
            "iss": "",
            "aud": "",
            "kid": "",
            "privateKey": "",
            "sub": "",
            "claims": "",
            "exp": ""
          }
        },
        "body": {
          "mode": "none",
          "parameter": [],
          "raw": "",
          "raw_parameter": [],
          "raw_schema": {
            "type": "object"
          },
          "binary": null
        },
        "pre_tasks": [],
        "post_tasks": [],
        "header": {
          "parameter": []
        },
        "query": {
          "parameter": [],
          "query_add_equal": 1
        },
        "cookie": {
          "parameter": []
        },
        "restful": {
          "parameter": []
        }
      },
      "response": {
        "is_check_result": 1,
        "example": [
          {
            "example_id": "1",
            "raw": "",
            "raw_parameter": [],
            "expect": {
              "name": "Success",
              "is_default": 1,
              "code": "200",
              "content_type": "json",
              "verify_type": "schema",
              "mock": "",
              "schema": {
                "type": "object",
                "properties": {}
              }
            }
          },
          {
            "example_id": "2",
            "raw": "",
            "raw_parameter": [],
            "expect": {
              "name": "Failure",
              "is_default": -1,
              "code": "404",
              "content_type": "json",
              "verify_type": "schema",
              "mock": "",
              "schema": {
                "type": "object",
                "properties": {}
              }
            }
          }
        ]
      },
      "description": "",
      "tags": [],
      "ai_expect_enable": -1,
      "is_check_result": 1,
      "is_socket": 1,
      "is_locked": -1,
      "is_force": -1,
      "attribute_info": {},
      "protocol": "http/1.1",
      "ai_expect": {
        "list": [],
        "none_math_expect_id": ""
      },
      "is_deleted": -1,
      "is_conflicted": -1,
      "vscode_version": "1.7.12"
    },
    {
      "project_id": "",
      "target_id": "31ebe03677400d",
      "parent_id": "2fef492936d006",
      "target_type": "api",
      "name": "Compliance action",
      "sort": 20,
      "version": 0,
      "mark_id": "",
      "status": 1,
      "is_changed": -1,
      "is_create": -1,
      "method": "POST",
      "url": "http://localhost:5000/audit-report/68b1f77d7aef5b9eb6ca47b1/action",
      "request": {
        "auth": {
          "type": "inherit",
          "kv": {
            "key": "",
            "value": "",
            "in": "header"
          },
          "bearer": {
            "key": ""
          },
          "basic": {
            "username": "",
            "password": ""
          },
          "digest": {
            "username": "",
            "password": "",
            "realm": "",
            "nonce": "",
            "algorithm": "MD5",
            "qop": "",
            "nc": "",
            "cnonce": "",
            "opaque": "",
            "disableRetryRequest": false
          },
          "oauth1": {
            "consumerKey": "",
            "consumerSecret": "",
            "signatureMethod": "HMAC-SHA1",
            "addEmptyParamsToSign": true,
            "includeBodyHash": true,
            "addParamsToHeader": false,
            "realm": "",
            "version": "1.0",
            "nonce": "",
            "timestamp": "",
            "verifier": "",
            "callback": "",
            "tokenSecret": "",
            "token": "",
            "disableHeaderEncoding": false
          },
          "oauth2": {
            "addTokenTo": "header",
            "headerPrefix": "Bearer",
            "access_token": "",
            "grant_type": "password_credentials",
            "redirect_uri": "",
            "authUrl": "",
            "accessTokenUrl": "",
            "clientId": "",
            "clientSecret": "",
            "username": "",
            "password": "",
            "challengeAlgorithm": "S256",
            "code_verifier": "Bearer",
            "scope": "",
            "state": "",
            "client_authentication": "header",
            "refreshTokenUrl": "",
            "authRequestParams": [],
            "tokenRequestParams": [],
            "refreshRequestParams": []
          },
          "hawk": {
            "authId": "",
            "authKey": "",
            "algorithm": "",
            "user": "",
            "nonce": "",
            "extraData": "",
            "app": "",
            "delegation": "",
            "timestamp": "",
            "includePayloadHash": false
          },
          "awsv4": {
            "accessKey": "",
            "secretKey": "",
            "region": "",
            "service": "",
            "sessionToken": "",
            "addAuthDataToQuery": false
          },
          "ntlm": {
            "username": "",
            "password": "",
            "domain": "",
            "workstation": "",
            "disableRetryRequest": false
          },
          "edgegrid": {
            "accessToken": "",
            "clientToken": "",
            "clientSecret": "",
            "nonce": "",
            "timestamp": "",
            "baseURi": "",
            "headersToSign": ""
          },
          "noauth": {},
          "jwt": {
            "addTokenTo": "header",
            "algorithm": "HS256",
            "secret": "",
            "isSecretBase64Encoded": false,
            "payload": "",
            "headerPrefix": "Bearer",
            "queryParamKey": "token",
            "header": ""
          },
          "asap": {
            "alg": "HS256",
            "iss": "",
            "aud": "",
            "kid": "",
            "privateKey": "",
            "sub": "",
            "claims": "",
            "exp": ""
          }
        },
        "body": {
          "mode": "json",
          "parameter": [],
          "raw": "",
          "raw_parameter": [],
          "raw_schema": {
            "type": "object"
          },
          "binary": null
        },
        "pre_tasks": [],
        "post_tasks": [],
        "header": {
          "parameter": []
        },
        "query": {
          "parameter": [],
          "query_add_equal": 1
        },
        "cookie": {
          "parameter": []
        },
        "restful": {
          "parameter": []
        }
      },
      "response": {
        "is_check_result": 1,
        "example": [
          {
            "example_id": "1",
            "raw": "",
            "raw_parameter": [],
            "expect": {
              "name": "Success",
              "is_default": 1,
              "code": "200",
              "content_type": "json",
              "verify_type": "schema",
              "mock": "",
              "schema": {
                "type": "object",
                "properties": {}
              }
            }
          },
          {
            "example_id": "2",
            "raw": "",
            "raw_parameter": [],
            "expect": {
              "name": "Failure",
              "is_default": -1,
              "code": "404",
              "content_type": "json",
              "verify_type": "schema",
              "mock": "",
              "schema": {
                "type": "object",
                "properties": {}
              }
            }
          }
        ]
      },
      "description": "",
      "tags": [],
      "ai_expect_enable": -1,
      "is_check_result": 1,
      "is_socket": 1,
      "is_locked": -1,
      "is_force": -1,
      "attribute_info": {},
      "protocol": "http/1.1",
      "ai_expect": {
        "list": [],
        "none_math_expect_id": ""
      },
      "is_deleted": -1,
      "is_conflicted": -1,
      "vscode_version": "1.7.12"
    },
    {
      "project_id": "",
      "target_id": "31f0a857f7400e",
      "parent_id": "2fef492936d006",
      "target_type": "api",
      "name": "Compliance action dismiss",
      "sort": 22,
      "version": 0,
      "mark_id": "",
      "status": 1,
      "is_changed": -1,
      "is_create": -1,
      "method": "POST",
      "url": "http://localhost:5000/audit-report/68b1f77d7aef5b9eb6ca47b1/dismiss",
      "request": {
        "auth": {
          "type": "inherit",
          "kv": {
            "key": "",
            "value": "",
            "in": "header"
          },
          "bearer": {
            "key": ""
          },
          "basic": {
            "username": "",
            "password": ""
          },
          "digest": {
            "username": "",
            "password": "",
            "realm": "",
            "nonce": "",
            "algorithm": "MD5",
            "qop": "",
            "nc": "",
            "cnonce": "",
            "opaque": "",
            "disableRetryRequest": false
          },
          "oauth1": {
            "consumerKey": "",
            "consumerSecret": "",
            "signatureMethod": "HMAC-SHA1",
            "addEmptyParamsToSign": true,
            "includeBodyHash": true,
            "addParamsToHeader": false,
            "realm": "",
            "version": "1.0",
            "nonce": "",
            "timestamp": "",
            "verifier": "",
            "callback": "",
            "tokenSecret": "",
            "token": "",
            "disableHeaderEncoding": false
          },
          "oauth2": {
            "addTokenTo": "header",
            "headerPrefix": "Bearer",
            "access_token": "",
            "grant_type": "password_credentials",
            "redirect_uri": "",
            "authUrl": "",
            "accessTokenUrl": "",
            "clientId": "",
            "clientSecret": "",
            "username": "",
            "password": "",
            "challengeAlgorithm": "S256",
            "code_verifier": "Bearer",
            "scope": "",
            "state": "",
            "client_authentication": "header",
            "refreshTokenUrl": "",
            "authRequestParams": [],
            "tokenRequestParams": [],
            "refreshRequestParams": []
          },
          "hawk": {
            "authId": "",
            "authKey": "",
            "algorithm": "",
            "user": "",
            "nonce": "",
            "extraData": "",
            "app": "",
            "delegation": "",
            "timestamp": "",
            "includePayloadHash": false
          },
          "awsv4": {
            "accessKey": "",
            "secretKey": "",
            "region": "",
            "service": "",
            "sessionToken": "",
            "addAuthDataToQuery": false
          },
          "ntlm": {
            "username": "",
            "password": "",
            "domain": "",
            "workstation": "",
            "disableRetryRequest": false
          },
          "edgegrid": {
            "accessToken": "",
            "clientToken": "",
            "clientSecret": "",
            "nonce": "",
            "timestamp": "",
            "baseURi": "",
            "headersToSign": ""
          },
          "noauth": {},
          "jwt": {
            "addTokenTo": "header",
            "algorithm": "HS256",
            "secret": "",
            "isSecretBase64Encoded": false,
            "payload": "",
            "headerPrefix": "Bearer",
            "queryParamKey": "token",
            "header": ""
          },
          "asap": {
            "alg": "HS256",
            "iss": "",
            "aud": "",
            "kid": "",
            "privateKey": "",
            "sub": "",
            "claims": "",
            "exp": ""
          }
        },
        "body": {
          "mode": "json",
          "parameter": [],
          "raw": "",
          "raw_parameter": [],
          "raw_schema": {
            "type": "object"
          },
          "binary": null
        },
        "pre_tasks": [],
        "post_tasks": [],
        "header": {
          "parameter": []
        },
        "query": {
          "parameter": [],
          "query_add_equal": 1
        },
        "cookie": {
          "parameter": []
        },
        "restful": {
          "parameter": []
        }
      },
      "response": {
        "is_check_result": 1,
        "example": [
          {
            "example_id": "1",
            "raw": "",
            "raw_parameter": [],
            "expect": {
              "name": "Success",
              "is_default": 1,
              "code": "200",
              "content_type": "json",
              "verify_type": "schema",
              "mock": "",
              "schema": {
                "type": "object",
                "properties": {}
              }
            }
          },
          {
            "example_id": "2",
            "raw": "",
            "raw_parameter": [],
            "expect": {
              "name": "Failure",
              "is_default": -1,
              "code": "404",
              "content_type": "json",
              "verify_type": "schema",
              "mock": "",
              "schema": {
                "type": "object",
                "properties": {}
              }
            }
          }
        ]
      },
      "description": "",
      "tags": [],
      "ai_expect_enable": -1,
      "is_check_result": 1,
      "is_socket": 1,
      "is_locked": -1,
      "is_force": -1,
      "attribute_info": {},
      "protocol": "http/1.1",
      "ai_expect": {
        "list": [],
        "none_math_expect_id": ""
      },
      "is_deleted": -1,
      "is_conflicted": -1,
      "vscode_version": "1.7.12"
    },
    {
      "project_id": "-1",
      "target_id": "31f67aeb37f005",
      "parent_id": "2fef492936d006",
      "target_type": "sse",
      "name": "Stream audit reports",
      "sort": 23,
      "version": 0,
      "mark_id": "1",
      "status": 1,
      "is_changed": -1,
      "is_create": -1,
      "method": "GET",
      "url": "http://localhost:5000/audit-report/stream",
      "request": {
        "auth": {
          "type": "inherit",
          "kv": {
            "key": "",
            "value": "",
            "in": "header"
          },
          "bearer": {
            "key": ""
          },
          "basic": {
            "username": "",
            "password": ""
          },
          "digest": {
            "username": "",
            "password": "",
            "realm": "",
            "nonce": "",
            "algorithm": "MD5",
            "qop": "",
            "nc": "",
            "cnonce": "",
            "opaque": "",
            "disableRetryRequest": false
          },
          "oauth1": {
            "consumerKey": "",
            "consumerSecret": "",
            "signatureMethod": "HMAC-SHA1",
            "addEmptyParamsToSign": true,
            "includeBodyHash": true,
            "addParamsToHeader": false,
            "realm": "",
            "version": "1.0",
            "nonce": "",
            "timestamp": "",
            "verifier": "",
            "callback": "",
            "tokenSecret": "",
            "token": "",
            "disableHeaderEncoding": false
          },
          "oauth2": {
            "addTokenTo": "header",
            "headerPrefix": "Bearer",
            "access_token": "",
            "grant_type": "password_credentials",
            "redirect_uri": "",
            "authUrl": "",
            "accessTokenUrl": "",
            "clientId": "",
            "clientSecret": "",
            "username": "",
            "password": "",
            "challengeAlgorithm": "S256",
            "code_verifier": "Bearer",
            "scope": "",
            "state": "",
            "client_authentication": "header",
            "refreshTokenUrl": "",
            "authRequestParams": [],
            "tokenRequestParams": [],
            "refreshRequestParams": []
          },
          "hawk": {
            "authId": "",
            "authKey": "",
            "algorithm": "",
            "user": "",
            "nonce": "",
            "extraData": "",
            "app": "",
            "delegation": "",
            "timestamp": "",
            "includePayloadHash": false
          },
          "awsv4": {
            "accessKey": "",
            "secretKey": "",
            "region": "",
            "service": "",
            "sessionToken": "",
            "addAuthDataToQuery": false
          },
          "ntlm": {
            "username": "",
            "password": "",
            "domain": "",
            "workstation": "",
            "disableRetryRequest": false
          },
          "edgegrid": {
            "accessToken": "",
            "clientToken": "",
            "clientSecret": "",
            "nonce": "",
            "timestamp": "",
            "baseURi": "",
            "headersToSign": ""
          },
          "noauth": {},
          "jwt": {
            "addTokenTo": "header",
            "algorithm": "HS256",
            "secret": "",
            "isSecretBase64Encoded": false,
            "payload": "",
            "headerPrefix": "Bearer",
            "queryParamKey": "token",
            "header": ""
          },
          "asap": {
            "alg": "HS256",
            "iss": "",
            "aud": "",
            "kid": "",
            "privateKey": "",
            "sub": "",
            "claims": "",
            "exp": ""
          }
        },
        "body": {
          "mode": "none",
          "parameter": [],
          "raw": "",
          "raw_parameter": [],
          "raw_schema": {
            "type": "object"
          },
          "binary": null
        },
        "pre_tasks": [],
        "post_tasks": [],
        "header": {
          "parameter": []
        },
        "query": {
          "parameter": [],
          "query_add_equal": 1
        },
        "cookie": {
          "parameter": []
        },
        "restful": {
          "parameter": []
        }
      },
      "response": {
        "is_check_result": 1,
        "example": [
          {
            "example_id": "1",
            "raw": "",
            "raw_parameter": [],
            "expect": {
              "is_default": 1,
              "code": "200",
              "content_type": "json",
              "verify_type": "schema",
              "mock": "",
              "schema": {
                "type": "object",
                "properties": {}
              }
            }
          },
          {
            "example_id": "2",
            "raw": "",
            "raw_parameter": [],
            "expect": {
              "is_default": -1,
              "code": "404",
              "content_type": "json",
              "verify_type": "schema",
              "mock": "",
              "schema": {
                "type": "object",
                "properties": {}
              }
            }
          }
        ]
      },
      "description": "",
      "tags": [],
      "is_socket": 1,
      "is_locked": -1,
      "is_force": -1,
      "attribute_info": {}
    },
    {
      "project_id": "",
      "target_id": "31f705d277f00b",
      "parent_id": "2fef492936d006",
      "target_type": "api",
      "name": "Get audit reports",
      "sort": 17,
      "version": 0,
      "mark_id": "",
      "status": 1,
      "is_changed": -1,
      "is_create": -1,
      "method": "GET",
      "url": "http://localhost:5000/audit-report",
      "request": {
        "auth": {
          "type": "inherit",
          "kv": {
            "key": "",
            "value": "",
            "in": "header"
          },
          "bearer": {
            "key": ""
          },
          "basic": {
            "username": "",
            "password": ""
          },
          "digest": {
            "username": "",
            "password": "",
            "realm": "",
            "nonce": "",
            "algorithm": "MD5",
            "qop": "",
            "nc": "",
            "cnonce": "",
            "opaque": "",
            "disableRetryRequest": false
          },
          "oauth1": {
            "consumerKey": "",
            "consumerSecret": "",
            "signatureMethod": "HMAC-SHA1",
            "addEmptyParamsToSign": true,
            "includeBodyHash": true,
            "addParamsToHeader": false,
            "realm": "",
            "version": "1.0",
            "nonce": "",
            "timestamp": "",
            "verifier": "",
            "callback": "",
            "tokenSecret": "",
            "token": "",
            "disableHeaderEncoding": false
          },
          "oauth2": {
            "addTokenTo": "header",
            "headerPrefix": "Bearer",
            "access_token": "",
            "grant_type": "password_credentials",
            "redirect_uri": "",
            "authUrl": "",
            "accessTokenUrl": "",
            "clientId": "",
            "clientSecret": "",
            "username": "",
            "password": "",
            "challengeAlgorithm": "S256",
            "code_verifier": "Bearer",
            "scope": "",
            "state": "",
            "client_authentication": "header",
            "refreshTokenUrl": "",
            "authRequestParams": [],
            "tokenRequestParams": [],
            "refreshRequestParams": []
          },
          "hawk": {
            "authId": "",
            "authKey": "",
            "algorithm": "",
            "user": "",
            "nonce": "",
            "extraData": "",
            "app": "",
            "delegation": "",
            "timestamp": "",
            "includePayloadHash": false
          },
          "awsv4": {
            "accessKey": "",
            "secretKey": "",
            "region": "",
            "service": "",
            "sessionToken": "",
            "addAuthDataToQuery": false
          },
          "ntlm": {
            "username": "",
            "password": "",
            "domain": "",
            "workstation": "",
            "disableRetryRequest": false
          },
          "edgegrid": {
            "accessToken": "",
            "clientToken": "",
            "clientSecret": "",
            "nonce": "",
            "timestamp": "",
            "baseURi": "",
            "headersToSign": ""
          },
          "noauth": {},
          "jwt": {
            "addTokenTo": "header",
            "algorithm": "HS256",
            "secret": "",
            "isSecretBase64Encoded": false,
            "payload": "",
            "headerPrefix": "Bearer",
            "queryParamKey": "token",
            "header": ""
          },
          "asap": {
            "alg": "HS256",
            "iss": "",
            "aud": "",
            "kid": "",
            "privateKey": "",
            "sub": "",
            "claims": "",
            "exp": ""
          }
        },
        "body": {
          "mode": "none",
          "parameter": [],
          "raw": "",
          "raw_parameter": [],
          "raw_schema": {
            "type": "object"
          },
          "binary": null
        },
        "pre_tasks": [],
        "post_tasks": [],
        "header": {
          "parameter": []
        },
        "query": {
          "parameter": [],
          "query_add_equal": 1
        },
        "cookie": {
          "parameter": []
        },
        "restful": {
          "parameter": []
        }
      },
      "response": {
        "is_check_result": 1,
        "example": [
          {
            "example_id": "1",
            "raw": "",
            "raw_parameter": [],
            "expect": {
              "name": "Success",
              "is_default": 1,
              "code": "200",
              "content_type": "json",
              "verify_type": "schema",
              "mock": "",
              "schema": {
                "type": "object",
                "properties": {}
              }
            }
          },
          {
            "example_id": "2",
            "raw": "",
            "raw_parameter": [],
            "expect": {
              "name": "Failure",
              "is_default": -1,
              "code": "404",
              "content_type": "json",
              "verify_type": "schema",
              "mock": "",
              "schema": {
                "type": "object",
                "properties": {}
              }
            }
          }
        ]
      },
      "description": "",
      "tags": [],
      "ai_expect_enable": -1,
      "is_check_result": 1,
      "is_socket": 1,
      "is_locked": -1,
      "is_force": -1,
      "attribute_info": {},
      "protocol": "http/1.1",
      "ai_expect": {
        "list": [],
        "none_math_expect_id": ""
      },
      "is_deleted": -1,
      "is_conflicted": -1,
      "vscode_version": "1.7.12"
    },
    {
      "project_id": "",
      "target_id": "31ffe7b837f026",
      "parent_id": "2fef492936d006",
      "target_type": "api",
      "name": "Get pending audit reports for feature",
      "sort": 19,
      "version": 0,
      "mark_id": "",
      "status": 1,
      "is_changed": -1,
      "is_create": -1,
      "method": "GET",
      "url": "http://localhost:5000/audit-report/feature/68b17049fabce069e7067577/pending",
      "request": {
        "auth": {
          "type": "inherit",
          "kv": {
            "key": "",
            "value": "",
            "in": "header"
          },
          "bearer": {
            "key": ""
          },
          "basic": {
            "username": "",
            "password": ""
          },
          "digest": {
            "username": "",
            "password": "",
            "realm": "",
            "nonce": "",
            "algorithm": "MD5",
            "qop": "",
            "nc": "",
            "cnonce": "",
            "opaque": "",
            "disableRetryRequest": false
          },
          "oauth1": {
            "consumerKey": "",
            "consumerSecret": "",
            "signatureMethod": "HMAC-SHA1",
            "addEmptyParamsToSign": true,
            "includeBodyHash": true,
            "addParamsToHeader": false,
            "realm": "",
            "version": "1.0",
            "nonce": "",
            "timestamp": "",
            "verifier": "",
            "callback": "",
            "tokenSecret": "",
            "token": "",
            "disableHeaderEncoding": false
          },
          "oauth2": {
            "addTokenTo": "header",
            "headerPrefix": "Bearer",
            "access_token": "",
            "grant_type": "password_credentials",
            "redirect_uri": "",
            "authUrl": "",
            "accessTokenUrl": "",
            "clientId": "",
            "clientSecret": "",
            "username": "",
            "password": "",
            "challengeAlgorithm": "S256",
            "code_verifier": "Bearer",
            "scope": "",
            "state": "",
            "client_authentication": "header",
            "refreshTokenUrl": "",
            "authRequestParams": [],
            "tokenRequestParams": [],
            "refreshRequestParams": []
          },
          "hawk": {
            "authId": "",
            "authKey": "",
            "algorithm": "",
            "user": "",
            "nonce": "",
            "extraData": "",
            "app": "",
            "delegation": "",
            "timestamp": "",
            "includePayloadHash": false
          },
          "awsv4": {
            "accessKey": "",
            "secretKey": "",
            "region": "",
            "service": "",
            "sessionToken": "",
            "addAuthDataToQuery": false
          },
          "ntlm": {
            "username": "",
            "password": "",
            "domain": "",
            "workstation": "",
            "disableRetryRequest": false
          },
          "edgegrid": {
            "accessToken": "",
            "clientToken": "",
            "clientSecret": "",
            "nonce": "",
            "timestamp": "",
            "baseURi": "",
            "headersToSign": ""
          },
          "noauth": {},
          "jwt": {
            "addTokenTo": "header",
            "algorithm": "HS256",
            "secret": "",
            "isSecretBase64Encoded": false,
            "payload": "",
            "headerPrefix": "Bearer",
            "queryParamKey": "token",
            "header": ""
          },
          "asap": {
            "alg": "HS256",
            "iss": "",
            "aud": "",
            "kid": "",
            "privateKey": "",
            "sub": "",
            "claims": "",
            "exp": ""
          }
        },
        "body": {
          "mode": "none",
          "parameter": [],
          "raw": "",
          "raw_parameter": [],
          "raw_schema": {
            "type": "object"
          },
          "binary": null
        },
        "pre_tasks": [],
        "post_tasks": [],
        "header": {
          "parameter": []
        },
        "query": {
          "parameter": [],
          "query_add_equal": 1
        },
        "cookie": {
          "parameter": []
        },
        "restful": {
          "parameter": []
        }
      },
      "response": {
        "is_check_result": 1,
        "example": [
          {
            "example_id": "1",
            "raw": "",
            "raw_parameter": [],
            "expect": {
              "name": "Success",
              "is_default": 1,
              "code": "200",
              "content_type": "json",
              "verify_type": "schema",
              "mock": "",
              "schema": {
                "type": "object",
                "properties": {}
              }
            }
          },
          {
            "example_id": "2",
            "raw": "",
            "raw_parameter": [],
            "expect": {
              "name": "Failure",
              "is_default": -1,
              "code": "404",
              "content_type": "json",
              "verify_type": "schema",
              "mock": "",
              "schema": {
                "type": "object",
                "properties": {}
              }
            }
          }
        ]
      },
      "description": "",
      "tags": [],
      "ai_expect_enable": -1,
      "is_check_result": 1,
      "is_socket": 1,
      "is_locked": -1,
      "is_force": -1,
      "attribute_info": {},
      "protocol": "http/1.1",
      "ai_expect": {
        "list": [],
        "none_math_expect_id": ""
      },
      "is_deleted": -1,
      "is_conflicted": -1,
      "vscode_version": "1.7.12"
    },
    {
      "project_id": "",
      "target_id": "3204e5e877f027",
      "parent_id": "2fef492936d006",
      "target_type": "api",
      "name": "Compliance action verify",
      "sort": 21,
      "version": 0,
      "mark_id": "",
      "status": 1,
      "is_changed": -1,
      "is_create": -1,
      "method": "POST",
      "url": "http://localhost:5000/audit-report/68b1f77d7aef5b9eb6ca47b1/verify",
      "request": {
        "auth": {
          "type": "inherit",
          "kv": {
            "key": "",
            "value": "",
            "in": "header"
          },
          "bearer": {
            "key": ""
          },
          "basic": {
            "username": "",
            "password": ""
          },
          "digest": {
            "username": "",
            "password": "",
            "realm": "",
            "nonce": "",
            "algorithm": "MD5",
            "qop": "",
            "nc": "",
            "cnonce": "",
            "opaque": "",
            "disableRetryRequest": false
          },
          "oauth1": {
            "consumerKey": "",
            "consumerSecret": "",
            "signatureMethod": "HMAC-SHA1",
            "addEmptyParamsToSign": true,
            "includeBodyHash": true,
            "addParamsToHeader": false,
            "realm": "",
            "version": "1.0",
            "nonce": "",
            "timestamp": "",
            "verifier": "",
            "callback": "",
            "tokenSecret": "",
            "token": "",
            "disableHeaderEncoding": false
          },
          "oauth2": {
            "addTokenTo": "header",
            "headerPrefix": "Bearer",
            "access_token": "",
            "grant_type": "password_credentials",
            "redirect_uri": "",
            "authUrl": "",
            "accessTokenUrl": "",
            "clientId": "",
            "clientSecret": "",
            "username": "",
            "password": "",
            "challengeAlgorithm": "S256",
            "code_verifier": "Bearer",
            "scope": "",
            "state": "",
            "client_authentication": "header",
            "refreshTokenUrl": "",
            "authRequestParams": [],
            "tokenRequestParams": [],
            "refreshRequestParams": []
          },
          "hawk": {
            "authId": "",
            "authKey": "",
            "algorithm": "",
            "user": "",
            "nonce": "",
            "extraData": "",
            "app": "",
            "delegation": "",
            "timestamp": "",
            "includePayloadHash": false
          },
          "awsv4": {
            "accessKey": "",
            "secretKey": "",
            "region": "",
            "service": "",
            "sessionToken": "",
            "addAuthDataToQuery": false
          },
          "ntlm": {
            "username": "",
            "password": "",
            "domain": "",
            "workstation": "",
            "disableRetryRequest": false
          },
          "edgegrid": {
            "accessToken": "",
            "clientToken": "",
            "clientSecret": "",
            "nonce": "",
            "timestamp": "",
            "baseURi": "",
            "headersToSign": ""
          },
          "noauth": {},
          "jwt": {
            "addTokenTo": "header",
            "algorithm": "HS256",
            "secret": "",
            "isSecretBase64Encoded": false,
            "payload": "",
            "headerPrefix": "Bearer",
            "queryParamKey": "token",
            "header": ""
          },
          "asap": {
            "alg": "HS256",
            "iss": "",
            "aud": "",
            "kid": "",
            "privateKey": "",
            "sub": "",
            "claims": "",
            "exp": ""
          }
        },
        "body": {
          "mode": "json",
          "parameter": [],
          "raw": "",
          "raw_parameter": [],
          "raw_schema": {
            "type": "object"
          },
          "binary": null
        },
        "pre_tasks": [],
        "post_tasks": [],
        "header": {
          "parameter": []
        },
        "query": {
          "parameter": [],
          "query_add_equal": 1
        },
        "cookie": {
          "parameter": []
        },
        "restful": {
          "parameter": []
        }
      },
      "response": {
        "is_check_result": 1,
        "example": [
          {
            "example_id": "1",
            "raw": "",
            "raw_parameter": [],
            "expect": {
              "name": "Success",
              "is_default": 1,
              "code": "200",
              "content_type": "json",
              "verify_type": "schema",
              "mock": "",
              "schema": {
                "type": "object",
                "properties": {}
              }
            }
          },
          {
            "example_id": "2",
            "raw": "",
            "raw_parameter": [],
            "expect": {
              "name": "Failure",
              "is_default": -1,
              "code": "404",
              "content_type": "json",
              "verify_type": "schema",
              "mock": "",
              "schema": {
                "type": "object",
                "properties": {}
              }
            }
          }
        ]
      },
      "description": "",
      "tags": [],
      "ai_expect_enable": -1,
      "is_check_result": 1,
      "is_socket": 1,
      "is_locked": -1,
      "is_force": -1,
      "attribute_info": {},
      "protocol": "http/1.1",
      "ai_expect": {
        "list": [],
        "none_math_expect_id": ""
      },
      "is_deleted": -1,
      "is_conflicted": -1,
      "vscode_version": "1.7.12"
    },
    {
      "project_id": "",
      "target_id": "32081aef37f028",
      "parent_id": "2fef492936d006",
      "target_type": "api",
      "name": "Get sources via ids",
      "sort": 7,
      "version": 0,
      "mark_id": "",
      "status": 1,
      "is_changed": -1,
      "is_create": -1,
      "method": "POST",
      "url": "http://localhost:5000/sources/ids",
      "request": {
        "auth": {
          "type": "inherit",
          "kv": {
            "key": "",
            "value": "",
            "in": "header"
          },
          "bearer": {
            "key": ""
          },
          "basic": {
            "username": "",
            "password": ""
          },
          "digest": {
            "username": "",
            "password": "",
            "realm": "",
            "nonce": "",
            "algorithm": "MD5",
            "qop": "",
            "nc": "",
            "cnonce": "",
            "opaque": "",
            "disableRetryRequest": false
          },
          "oauth1": {
            "consumerKey": "",
            "consumerSecret": "",
            "signatureMethod": "HMAC-SHA1",
            "addEmptyParamsToSign": true,
            "includeBodyHash": true,
            "addParamsToHeader": false,
            "realm": "",
            "version": "1.0",
            "nonce": "",
            "timestamp": "",
            "verifier": "",
            "callback": "",
            "tokenSecret": "",
            "token": "",
            "disableHeaderEncoding": false
          },
          "oauth2": {
            "addTokenTo": "header",
            "headerPrefix": "Bearer",
            "access_token": "",
            "grant_type": "password_credentials",
            "redirect_uri": "",
            "authUrl": "",
            "accessTokenUrl": "",
            "clientId": "",
            "clientSecret": "",
            "username": "",
            "password": "",
            "challengeAlgorithm": "S256",
            "code_verifier": "Bearer",
            "scope": "",
            "state": "",
            "client_authentication": "header",
            "refreshTokenUrl": "",
            "authRequestParams": [],
            "tokenRequestParams": [],
            "refreshRequestParams": []
          },
          "hawk": {
            "authId": "",
            "authKey": "",
            "algorithm": "",
            "user": "",
            "nonce": "",
            "extraData": "",
            "app": "",
            "delegation": "",
            "timestamp": "",
            "includePayloadHash": false
          },
          "awsv4": {
            "accessKey": "",
            "secretKey": "",
            "region": "",
            "service": "",
            "sessionToken": "",
            "addAuthDataToQuery": false
          },
          "ntlm": {
            "username": "",
            "password": "",
            "domain": "",
            "workstation": "",
            "disableRetryRequest": false
          },
          "edgegrid": {
            "accessToken": "",
            "clientToken": "",
            "clientSecret": "",
            "nonce": "",
            "timestamp": "",
            "baseURi": "",
            "headersToSign": ""
          },
          "noauth": {},
          "jwt": {
            "addTokenTo": "header",
            "algorithm": "HS256",
            "secret": "",
            "isSecretBase64Encoded": false,
            "payload": "",
            "headerPrefix": "Bearer",
            "queryParamKey": "token",
            "header": ""
          },
          "asap": {
            "alg": "HS256",
            "iss": "",
            "aud": "",
            "kid": "",
            "privateKey": "",
            "sub": "",
            "claims": "",
            "exp": ""
          }
        },
        "body": {
          "mode": "json",
          "parameter": [],
          "raw": "{\n    \"source_ids\": [\n        \"68b02f14e93fd6bb08376604\",\n        \"68b098ce012b992af4e99c86\"\n    ]\n}",
          "raw_parameter": [],
          "raw_schema": {
            "type": "object"
          },
          "binary": null
        },
        "pre_tasks": [],
        "post_tasks": [],
        "header": {
          "parameter": []
        },
        "query": {
          "parameter": [],
          "query_add_equal": 1
        },
        "cookie": {
          "parameter": []
        },
        "restful": {
          "parameter": []
        }
      },
      "response": {
        "is_check_result": 1,
        "example": [
          {
            "example_id": "1",
            "raw": "",
            "raw_parameter": [],
            "expect": {
              "name": "Success",
              "is_default": 1,
              "code": "200",
              "content_type": "json",
              "verify_type": "schema",
              "mock": "",
              "schema": {
                "type": "object",
                "properties": {}
              }
            }
          },
          {
            "example_id": "2",
            "raw": "",
            "raw_parameter": [],
            "expect": {
              "name": "Failure",
              "is_default": -1,
              "code": "404",
              "content_type": "json",
              "verify_type": "schema",
              "mock": "",
              "schema": {
                "type": "object",
                "properties": {}
              }
            }
          }
        ]
      },
      "description": "",
      "tags": [],
      "ai_expect_enable": -1,
      "is_check_result": 1,
      "is_socket": 1,
      "is_locked": -1,
      "is_force": -1,
      "attribute_info": {},
      "protocol": "http/1.1",
      "ai_expect": {
        "list": [],
        "none_math_expect_id": ""
      },
      "is_deleted": -1,
      "is_conflicted": -1,
      "vscode_version": "1.7.12"
    }
  ]
}
